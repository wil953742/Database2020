{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hyunkang/Desktop/School/3-2/\\u1103\\u1166\\u110B\\u1175\\u1110\\u1165\\u1107\\u1166\\u110B\\u1175\\u1109\\u1173/Database2020/client/src/Components/Schema.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nexport const Schema = ({\n  pair,\n  raw,\n  tdt\n}) => {\n  _s();\n\n  const dataType = [\"bit\", \"tinyint\", \"smallint\", \"int\", \"bigint\", \"decimal\", \"numeric\", \"float\", \"real\", \"date\", \"time\", \"datetime\", \"timestamp\", \"year\", \"char\", \"varchar\", \"text\", \"nchar\", \"nvarchar\", \"ntext\", \"binary\", \"varbinary\", \"image\", \"clob\", \"bclob\", \"xml\", \"json\"];\n  const maxList = [\"varbinary\", \"nvarchar\", \"varchar\"];\n  const [toggleMax, setToggleMax] = useState(false);\n  const [type, setType] = useState(\"\");\n  const [maxLength, setMaxLength] = useState(\"\");\n  const [map, setMap] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          minWidth: \"200px\",\n          marginRight: \"10px\"\n        },\n        id: \"name\",\n        label: \"\\uC18D\\uC131 \\uC774\\uB984\",\n        placeholder: \"\\uC18D\\uC131 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC2DC\\uC624.\",\n        value: name,\n        onChange: e => {\n          setName(e.target.value);\n          pair.name = e.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        style: {\n          minWidth: \"200px\",\n          marginRight: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"\\uC18D\\uC131\\uD0C0\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"type\",\n          value: type,\n          onChange: e => {\n            if (maxList.includes(e.target.value)) {\n              setToggleMax(true);\n            } else {\n              setToggleMax(false);\n            }\n\n            setType(e.target.value);\n            pair.type = e.target.value;\n          },\n          children: dataType.map(type => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: type,\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), toggleMax && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          minWidth: \"200px\",\n          marginRight: \"10px\"\n        },\n        id: \"name\",\n        type: \"number\",\n        label: \"Max Length\",\n        placeholder: \"\\uAE30\\uBCF8\\uAC12=20\",\n        value: maxLength,\n        onChange: e => {\n          if (e.target.value > 65535 || e.target.value < 1) {\n            setMaxLength(20);\n            pair.maxLength = 20;\n          } else {\n            setMaxLength(e.target.value);\n            pair.maxLength = e.target.value;\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), raw && /*#__PURE__*/_jsxDEV(FormControl, {\n      style: {\n        minWidth: \"200px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"\\uB9E4\\uD551\\uC18D\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        id: \"type\",\n        value: map,\n        onChange: e => {\n          if (e.target.value) {\n            if (e.target.value.maxLength) {\n              setToggleMax(true);\n            } else {\n              setToggleMax(false);\n            }\n\n            setMap(e.target.value);\n            setMaxLength(e.target.value.maxLength);\n            setType(e.target.value.type);\n            pair.map = e.target.value.name;\n            pair.maxLength = e.target.value.maxLength;\n            pair.type = e.target.value.type;\n          } else {\n            pair.map = null;\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: null,\n          children: \"null\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), tdt.map(pair => {\n          return /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: pair,\n            children: pair.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Schema, \"X4x43hjrpMxYnpbff4l89hjs1Vw=\");\n\n_c = Schema;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schema\");","map":{"version":3,"sources":["/Users/hyunkang/Desktop/School/3-2/데이터베이스/Database2020/client/src/Components/Schema.js"],"names":["React","useState","useEffect","TextField","MenuItem","FormControl","Select","InputLabel","Schema","pair","raw","tdt","dataType","maxList","toggleMax","setToggleMax","type","setType","maxLength","setMaxLength","map","setMap","name","setName","display","justifyContent","minWidth","marginRight","e","target","value","includes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nexport const Schema = ({ pair, raw, tdt }) => {\n  const dataType = [\n    \"bit\",\n    \"tinyint\",\n    \"smallint\",\n    \"int\",\n    \"bigint\",\n    \"decimal\",\n    \"numeric\",\n    \"float\",\n    \"real\",\n    \"date\",\n    \"time\",\n    \"datetime\",\n    \"timestamp\",\n    \"year\",\n    \"char\",\n    \"varchar\",\n    \"text\",\n    \"nchar\",\n    \"nvarchar\",\n    \"ntext\",\n    \"binary\",\n    \"varbinary\",\n    \"image\",\n    \"clob\",\n    \"bclob\",\n    \"xml\",\n    \"json\",\n  ];\n  const maxList = [\"varbinary\", \"nvarchar\", \"varchar\"];\n  const [toggleMax, setToggleMax] = useState(false);\n  const [type, setType] = useState(\"\");\n  const [maxLength, setMaxLength] = useState(\"\");\n  const [map, setMap] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <div>\n        <TextField\n          style={{ minWidth: \"200px\", marginRight: \"10px\" }}\n          id=\"name\"\n          label=\"속성 이름\"\n          placeholder=\"속성 이름을 입력하시오.\"\n          value={name}\n          onChange={(e) => {\n            setName(e.target.value);\n            pair.name = e.target.value;\n          }}\n        />\n      </div>\n      <div>\n        <FormControl style={{ minWidth: \"200px\", marginRight: \"10px\" }}>\n          <InputLabel>속성타입</InputLabel>\n          <Select\n            id=\"type\"\n            value={type}\n            onChange={(e) => {\n              if (maxList.includes(e.target.value)) {\n                setToggleMax(true);\n              } else {\n                setToggleMax(false);\n              }\n              setType(e.target.value);\n              pair.type = e.target.value;\n            }}\n          >\n            {dataType.map((type) => {\n              return <MenuItem value={type}>{type}</MenuItem>;\n            })}\n          </Select>\n        </FormControl>\n      </div>\n      {toggleMax && (\n        <div>\n          <TextField\n            style={{ minWidth: \"200px\", marginRight: \"10px\" }}\n            id=\"name\"\n            type=\"number\"\n            label=\"Max Length\"\n            placeholder=\"기본값=20\"\n            value={maxLength}\n            onChange={(e) => {\n              if (e.target.value > 65535 || e.target.value < 1) {\n                setMaxLength(20);\n                pair.maxLength = 20;\n              } else {\n                setMaxLength(e.target.value);\n                pair.maxLength = e.target.value;\n              }\n            }}\n          />\n        </div>\n      )}\n      {raw && (\n        <FormControl style={{ minWidth: \"200px\" }}>\n          <InputLabel>매핑속성</InputLabel>\n          <Select\n            id=\"type\"\n            value={map}\n            onChange={(e) => {\n              if (e.target.value) {\n                if (e.target.value.maxLength) {\n                  setToggleMax(true);\n                } else {\n                  setToggleMax(false);\n                }\n                setMap(e.target.value);\n                setMaxLength(e.target.value.maxLength);\n                setType(e.target.value.type);\n                pair.map = e.target.value.name;\n                pair.maxLength = e.target.value.maxLength;\n                pair.type = e.target.value.type;\n              } else {\n                pair.map = null;\n              }\n            }}\n          >\n            <MenuItem value={null}>null</MenuItem>\n            {tdt.map((pair) => {\n              return <MenuItem value={pair}>{pair.name}</MenuItem>;\n            })}\n          </Select>\n        </FormControl>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}