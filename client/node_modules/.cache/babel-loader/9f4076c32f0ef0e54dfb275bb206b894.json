{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hyunkang/Desktop/School/3-2/\\u1103\\u1166\\u110B\\u1175\\u1110\\u1165\\u1107\\u1166\\u110B\\u1175\\u1109\\u1173/Database2020/client/src/View/EstimatorMain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../CSS/mainstyle.module.css\";\nimport { Record } from \"../Components/classes\";\nimport { QT } from \"../Components/classes\";\nimport { EstimatorTopRow } from \"../Components/EstimatorTopRow\";\nimport { EstimateUnfinished } from \"../Components/EstimateUnfinished\";\nimport { EstimateFinished } from \"../Components/EstimateFinished\";\nimport Axios from \"axios\";\nexport const EstimatorMain = ({\n  loginfo\n}) => {\n  _s();\n\n  // const testRecord = new Record(\n  //   1,\n  //   \"임시이름\",\n  //   \"임시 타입\",\n  //   \"둘리\",\n  //   1,\n  //   new QT(100, 10, 0.4),\n  //   null,\n  //   \"/\"\n  // );\n  // var unfinished = [];\n  // var finished = [];\n  // unfinished.push(testRecord);\n  // unfinished.push(testRecord);\n  // unfinished.push(testRecord);\n  // finished.push(testRecord);\n  // finished.push(testRecord);\n  // finished.push(testRecord);\n  const LoadTasks = (unfinished, finished) => {\n    /*  function to initially load tasks to lists\n        userID is in \"loginfo.userID\"\n    */\n  };\n\n  var loginfo;\n  var accountID = loginfo.accountID;\n\n  const axios = require(\"axios\").default;\n\n  const [unfinishedRecord, setUnfinishedRecord] = useState();\n  const [finishedRecord, setFinishedRecord] = useState();\n  const [unfinished, setUnfinishedList] = useState([]);\n  const [finished, setFinishedList] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      await axios.get(`/api/Estimator/${accountID}/notYet`).then(res => {\n        setUnfinishedRecord(res.data);\n      });\n      await axios.get(`/api/Estimator/${accountID}/finished`).then(res => {\n        setFinishedRecord(res.data);\n      });\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (!unfinishedRecord) return;\n    var unfinished = [];\n\n    for (var i = 0; i < unfinishedRecord.length; i++) {\n      unfinished.push(new Record(unfinishedRecord[i].ParsingDataSequenceFileID, unfinishedRecord[i].CollectedTaskID, unfinishedRecord[i].BelongsRawDataTypeID, unfinishedRecord[i].RDSFSubmitterID, unfinishedRecord[i].Turn, new QT(unfinishedRecord[i].TotalTupleNum, unfinishedRecord[i].DupTupleNum, unfinishedRecord[i].NullRatio), unfinishedRecord[i].QualityScore, unfinishedRecord[i].Directory));\n    }\n\n    setUnfinishedList(unfinished);\n    if (!finishedRecord) return;\n    var finished = [];\n\n    for (var i = 0; i < finishedRecord.length; i++) {\n      finished.push(new Record(finishedRecord[i].ParsingDataSequenceFileID, finishedRecord[i].CollectedTaskID, finishedRecord[i].BelongsRawDataTypeID, finishedRecord[i].RDSFSubmitterID, finishedRecord[i].Turn, new QT(finishedRecord[i].TotalTupleNum, finishedRecord[i].DupTupleNum, finishedRecord[i].NullRatio), finishedRecord[i].QualityScore, finishedRecord[i].Directory));\n    }\n\n    setFinishedList(finished);\n  }, [unfinishedRecord, finishedRecord]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.center_all,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.list_title,\n      children: \"\\uD3C9\\uAC00 \\uD604\\uD669\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sub_container_2,\n        children: [/*#__PURE__*/_jsxDEV(EstimatorTopRow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.scrollable_div,\n          children: unfinished.map(record => /*#__PURE__*/_jsxDEV(EstimateUnfinished, {\n            record: record\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sub_container_2,\n        style: {\n          marginTop: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(EstimatorTopRow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.scrollable_div,\n          children: finished.map(record => /*#__PURE__*/_jsxDEV(EstimateFinished, {\n            record: record\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EstimatorMain, \"MbFfzbO71OdHDOZgRpKtVnX9nTw=\");\n\n_c = EstimatorMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"EstimatorMain\");","map":{"version":3,"sources":["/Users/hyunkang/Desktop/School/3-2/데이터베이스/Database2020/client/src/View/EstimatorMain.js"],"names":["React","useEffect","useState","styles","Record","QT","EstimatorTopRow","EstimateUnfinished","EstimateFinished","Axios","EstimatorMain","loginfo","LoadTasks","unfinished","finished","accountID","axios","require","default","unfinishedRecord","setUnfinishedRecord","finishedRecord","setFinishedRecord","setUnfinishedList","setFinishedList","fetchData","get","then","res","data","i","length","push","ParsingDataSequenceFileID","CollectedTaskID","BelongsRawDataTypeID","RDSFSubmitterID","Turn","TotalTupleNum","DupTupleNum","NullRatio","QualityScore","Directory","center_all","list_title","main_container","sub_container_2","scrollable_div","map","record","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"../CSS/mainstyle.module.css\";\nimport { Record } from \"../Components/classes\";\nimport { QT } from \"../Components/classes\";\n\nimport { EstimatorTopRow } from \"../Components/EstimatorTopRow\";\nimport { EstimateUnfinished } from \"../Components/EstimateUnfinished\";\nimport { EstimateFinished } from \"../Components/EstimateFinished\";\nimport Axios from \"axios\";\n\nexport const EstimatorMain = ({ loginfo }) => {\n  // const testRecord = new Record(\n  //   1,\n  //   \"임시이름\",\n  //   \"임시 타입\",\n  //   \"둘리\",\n  //   1,\n  //   new QT(100, 10, 0.4),\n  //   null,\n  //   \"/\"\n  // );\n  \n\n  // var unfinished = [];\n  // var finished = [];\n  // unfinished.push(testRecord);\n  // unfinished.push(testRecord);\n  // unfinished.push(testRecord);\n  // finished.push(testRecord);\n  // finished.push(testRecord);\n  // finished.push(testRecord);\n\n  const LoadTasks = (unfinished, finished) => {\n    /*  function to initially load tasks to lists\n        userID is in \"loginfo.userID\"\n    */\n    \n  };\n\n  var loginfo;\n  var accountID = loginfo.accountID;\n  const axios = require(\"axios\").default;\n  \n  const [unfinishedRecord, setUnfinishedRecord] = useState();\n  const [finishedRecord, setFinishedRecord] = useState();\n  const [unfinished, setUnfinishedList] = useState([]);\n  const [finished, setFinishedList] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      await axios.get(`/api/Estimator/${accountID}/notYet`).then((res) => {\n        setUnfinishedRecord(res.data);\n      });\n      \n      await axios.get(`/api/Estimator/${accountID}/finished`).then((res) => {\n        setFinishedRecord(res.data);\n      });\n    }\n    fetchData();\n  }, []);\n  \n\n  useEffect(() => {\n    if (!unfinishedRecord) return;\n    var unfinished = [];\n    for (var i = 0; i < unfinishedRecord.length; i++){\n      unfinished.push(\n        new Record(\n          unfinishedRecord[i].ParsingDataSequenceFileID ,\n          unfinishedRecord[i].CollectedTaskID,\n          unfinishedRecord[i].BelongsRawDataTypeID,\n          unfinishedRecord[i].RDSFSubmitterID,\n          unfinishedRecord[i].Turn,\n          new QT(unfinishedRecord[i].TotalTupleNum, \n                 unfinishedRecord[i].DupTupleNum,\n                 unfinishedRecord[i].NullRatio),\n          unfinishedRecord[i].QualityScore,\n          unfinishedRecord[i].Directory\n        )\n      );\n    }\n    setUnfinishedList(unfinished);\n\n    if (!finishedRecord) return;\n    var finished = [];\n    for (var i = 0; i < finishedRecord.length; i++){\n      finished.push(\n        new Record(\n          finishedRecord[i].ParsingDataSequenceFileID ,\n          finishedRecord[i].CollectedTaskID,\n          finishedRecord[i].BelongsRawDataTypeID,\n          finishedRecord[i].RDSFSubmitterID,\n          finishedRecord[i].Turn,\n          new QT(finishedRecord[i].TotalTupleNum, \n                 finishedRecord[i].DupTupleNum,\n                 finishedRecord[i].NullRatio),\n          finishedRecord[i].QualityScore,\n          finishedRecord[i].Directory\n        )\n      );\n    }\n    setFinishedList(finished);\n  }, [unfinishedRecord, finishedRecord]);\n  \n\n\n  return (\n    <div className={styles.center_all}>\n      <h2 className={styles.list_title}>평가 현황</h2>\n      <div className={styles.main_container}>\n        <div className={styles.sub_container_2}>\n          <EstimatorTopRow />\n          <div className={styles.scrollable_div}>\n            {unfinished.map((record) => (\n              <EstimateUnfinished record={record} />\n            ))}\n          </div>\n        </div>\n        <div className={styles.sub_container_2} style={{ marginTop: 0 }}>\n          <EstimatorTopRow />\n          <div className={styles.scrollable_div}>\n            {finished.map((record) => (\n              <EstimateFinished record={record} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}