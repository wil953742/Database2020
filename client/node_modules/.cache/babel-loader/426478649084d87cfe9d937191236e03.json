{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hyunkang/Desktop/School/3-2/\\u1103\\u1166\\u110B\\u1175\\u1110\\u1165\\u1107\\u1166\\u110B\\u1175\\u1109\\u1173/Database2020/client/src/Components/Schema.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nexport const Schema = ({\n  pair,\n  raw\n}) => {\n  _s();\n\n  const dataType = [\"bit\", \"tinyint\", \"smallint\", \"int\", \"bigint\", \"decimal\", \"numeric\", \"float\", \"real\", \"date\", \"time\", \"datetime\", \"timestamp\", \"year\", \"char\", \"varchar\", \"text\", \"nchar\", \"nvarchar\", \"ntext\", \"binary\", \"varbinary\", \"image\", \"clob\", \"bclob\", \"xml\", \"json\"];\n  pair.maxLength = null;\n  const maxList = [\"varbinary\", \"nvarchar\", \"varchar\"];\n  const [toggleMax, setToggleMax] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          minWidth: \"200px\",\n          marginRight: \"10px\"\n        },\n        id: \"name\",\n        label: \"\\uC18D\\uC131 \\uC774\\uB984\",\n        placeholder: \"\\uC18D\\uC131 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC2DC\\uC624.\",\n        value: pair.name,\n        onChange: e => {\n          pair.name = e.target.value;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        style: {\n          minWidth: \"200px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"\\uC18D\\uC131\\uD0C0\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          id: \"type\",\n          value: pair.type,\n          onChange: e => {\n            if (maxList.includes(e.target.value)) {\n              setToggleMax(true);\n            } else {\n              setToggleMax(false);\n            }\n\n            pair.type = e.target.value;\n          },\n          children: dataType.map(type => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: type,\n              children: type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), toggleMax && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          minWidth: \"200px\",\n          marginRight: \"10px\"\n        },\n        id: \"name\",\n        type: \"number\",\n        label: \"Max Length\",\n        placeholder: \"\\uAE30\\uBCF8\\uAC12=20\",\n        value: pair.maxLength,\n        onChange: e => {\n          if (e.target.value > 65535 || e.target.value < 1) {\n            pair.maxLength = 20;\n          } else {\n            pair.maxLength = e.target.value;\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Schema, \"nnc13oAgJuXNSFxpjb/LJLZ1jf8=\");\n\n_c = Schema;\n\nvar _c;\n\n$RefreshReg$(_c, \"Schema\");","map":{"version":3,"sources":["/Users/hyunkang/Desktop/School/3-2/데이터베이스/Database2020/client/src/Components/Schema.js"],"names":["React","useState","TextField","MenuItem","FormControl","Select","InputLabel","Schema","pair","raw","dataType","maxLength","maxList","toggleMax","setToggleMax","display","justifyContent","minWidth","marginRight","name","e","target","value","type","includes","map"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nexport const Schema = ({ pair, raw }) => {\n  const dataType = [\n    \"bit\",\n    \"tinyint\",\n    \"smallint\",\n    \"int\",\n    \"bigint\",\n    \"decimal\",\n    \"numeric\",\n    \"float\",\n    \"real\",\n    \"date\",\n    \"time\",\n    \"datetime\",\n    \"timestamp\",\n    \"year\",\n    \"char\",\n    \"varchar\",\n    \"text\",\n    \"nchar\",\n    \"nvarchar\",\n    \"ntext\",\n    \"binary\",\n    \"varbinary\",\n    \"image\",\n    \"clob\",\n    \"bclob\",\n    \"xml\",\n    \"json\",\n  ];\n  pair.maxLength = null;\n  const maxList = [\"varbinary\", \"nvarchar\", \"varchar\"];\n  const [toggleMax, setToggleMax] = useState(false);\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <div>\n        <TextField\n          style={{ minWidth: \"200px\", marginRight: \"10px\" }}\n          id=\"name\"\n          label=\"속성 이름\"\n          placeholder=\"속성 이름을 입력하시오.\"\n          value={pair.name}\n          onChange={(e) => {\n            pair.name = e.target.value;\n          }}\n        />\n      </div>\n      <div>\n        <FormControl style={{ minWidth: \"200px\" }}>\n          <InputLabel>속성타입</InputLabel>\n          <Select\n            id=\"type\"\n            value={pair.type}\n            onChange={(e) => {\n              if (maxList.includes(e.target.value)) {\n                setToggleMax(true);\n              } else {\n                setToggleMax(false);\n              }\n              pair.type = e.target.value;\n            }}\n          >\n            {dataType.map((type) => {\n              return <MenuItem value={type}>{type}</MenuItem>;\n            })}\n          </Select>\n        </FormControl>\n      </div>\n      {toggleMax && (\n        <div>\n          <TextField\n            style={{ minWidth: \"200px\", marginRight: \"10px\" }}\n            id=\"name\"\n            type=\"number\"\n            label=\"Max Length\"\n            placeholder=\"기본값=20\"\n            value={pair.maxLength}\n            onChange={(e) => {\n              if (e.target.value > 65535 || e.target.value < 1) {\n                pair.maxLength = 20;\n              } else {\n                pair.maxLength = e.target.value;\n              }\n            }}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}