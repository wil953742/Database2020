{"ast":null,"code":"class User {\n  constructor(userID, ID, userType, name, sex, address, birthdate, phone) {\n    this.userID = userID;\n    this.ID = ID;\n    this.userType = userType;\n    this.name = name;\n    this.sex = sex;\n    this.address = address;\n    this.birthdate = birthdate;\n    this.phone = phone;\n  }\n\n}\n\nclass Record {\n  constructor(PDSFID, taskName, taskType, submitter, turn, qt, score, directory) {\n    this.PDSFID = PDSFID;\n    this.taskName = taskName;\n    this.taskType = taskType;\n    this.submitter = submitter;\n    this.turn = turn;\n    this.qt = qt;\n    this.score = score;\n    this.directory = directory;\n  }\n\n}\n\nclass QT {\n  constructor(total_tup, dup_tup, null_ratio) {\n    this.total_tup = total_tup;\n    this.dup_tup = dup_tup;\n    this.null_ratio = null_ratio;\n  }\n\n}\n\nclass AdminTask {\n  constructor(taskID, desc, period, passScore) {\n    this.taskID = taskID;\n    this.desc = desc;\n    this.period = period;\n    this.passScore = passScore;\n  }\n\n}\n\nclass AdminUser {\n  constructor(userID, name, type, age, sex, id, task) {\n    this.userID = userID;\n    this.name = name;\n    this.type = type;\n    this.age = age;\n    this.sex = sex;\n    this.id = id;\n    this.task = task;\n  }\n\n}\n\nclass NewTask {\n  constructor(name, desc, period, passScore, TDTSchema, RDTSchema) {\n    this.name = name;\n    this.desc = desc;\n    this.period = period;\n    this.passScore = passScore;\n    this.TDTSchema = TDTSchema;\n    this.RDTSchema = RDTSchema;\n  }\n\n}\n\nclass Pair {\n  constructor(name, type) {\n    this.name = name;\n    this.type = type;\n  }\n\n}\n\nclass SC {\n  constructor(list) {\n    this.list = list;\n  }\n\n}\n\nclass RSC extends SC {\n  constructor(name, SC) {\n    super(SC);\n    this.name = name;\n  }\n\n}\n\nexport { User, Record, QT, AdminTask, AdminUser, Pair, SC, RSC, NewTask };","map":{"version":3,"sources":["/Users/hyunkang/Desktop/School/3-2/데이터베이스/Database2020/client/src/Components/classes.js"],"names":["User","constructor","userID","ID","userType","name","sex","address","birthdate","phone","Record","PDSFID","taskName","taskType","submitter","turn","qt","score","directory","QT","total_tup","dup_tup","null_ratio","AdminTask","taskID","desc","period","passScore","AdminUser","type","age","id","task","NewTask","TDTSchema","RDTSchema","Pair","SC","list","RSC"],"mappings":"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","sourcesContent":["class User {\n  constructor(userID, ID, userType, name, sex, address, birthdate, phone) {\n    this.userID = userID;\n    this.ID = ID;\n    this.userType = userType;\n    this.name = name;\n    this.sex = sex;\n    this.address = address;\n    this.birthdate = birthdate;\n    this.phone = phone;\n  }\n}\n\nclass Record {\n  constructor(\n    PDSFID,\n    taskName,\n    taskType,\n    submitter,\n    turn,\n    qt,\n    score,\n    directory\n  ) {\n    this.PDSFID = PDSFID;\n    this.taskName = taskName;\n    this.taskType = taskType;\n    this.submitter = submitter;\n    this.turn = turn;\n    this.qt = qt;\n    this.score = score;\n    this.directory = directory;\n  }\n}\n\nclass QT {\n  constructor(total_tup, dup_tup, null_ratio) {\n    this.total_tup = total_tup;\n    this.dup_tup = dup_tup;\n    this.null_ratio = null_ratio;\n  }\n}\n\nclass AdminTask {\n  constructor(taskID, desc, period, passScore) {\n    this.taskID = taskID;\n    this.desc = desc;\n    this.period = period;\n    this.passScore = passScore;\n  }\n}\n\nclass AdminUser {\n  constructor(userID, name, type, age, sex, id, task) {\n    this.userID = userID;\n    this.name = name;\n    this.type = type;\n    this.age = age;\n    this.sex = sex;\n    this.id = id;\n    this.task = task;\n  }\n}\n\nclass NewTask {\n  constructor(name, desc, period, passScore, TDTSchema, RDTSchema) {\n    this.name = name;\n    this.desc = desc;\n    this.period = period;\n    this.passScore = passScore;\n    this.TDTSchema = TDTSchema;\n    this.RDTSchema = RDTSchema;\n  }\n}\n\nclass Pair {\n  constructor(name, type) {\n    this.name = name;\n    this.type = type;\n  }\n}\n\nclass SC {\n  constructor(list) {\n    this.list = list;\n  }\n}\n\nclass RSC extends SC {\n  constructor(name, SC) {\n    super(SC);\n    this.name = name;\n  }\n}\n\nexport { User, Record, QT, AdminTask, AdminUser, Pair, SC, RSC, NewTask };\n"]},"metadata":{},"sourceType":"module"}