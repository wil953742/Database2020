{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hyunkang/Desktop/School/3-2/\\u1103\\u1166\\u110B\\u1175\\u1110\\u1165\\u1107\\u1166\\u110B\\u1175\\u1109\\u1173/Database2020/client/src/View/SubmitterTaskView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"../CSS/mainstyle.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { fileTask, PNP } from \"../Components/classes\";\nimport { SubmitterTaskRowNav } from \"../Components/SubmitterTaskRowNav\";\nimport { SubmitterTaskRow } from \"../Components/SubmitterTaskRow\";\nimport { SubmitterSubmit } from \"../Components/SubmitterSubmit\";\nimport { Nav } from \"../Components/Nav\";\nimport { useForkRef } from \"@material-ui/core\";\nexport const SubmitterTaskView = () => {\n  _s();\n\n  var logInfo;\n  var history = useHistory();\n  const loggedIn = localStorage.getItem(\"user\");\n\n  if (loggedIn) {\n    logInfo = JSON.parse(loggedIn);\n  } else {\n    history.push(\"/\");\n  }\n\n  let location = useLocation();\n  let tid = location.pathname.split('/')[2];\n\n  const axios = require(\"axios\").default;\n\n  const [data, setData] = useState();\n  const [taskInfo, setTaskInfo] = useState();\n  const [taskList, setTaskList] = useState([]);\n  const [togglePopUp, setTogglePopUp] = useState(false);\n\n  const Submit = () => {\n    // Get Information About Chosen Task\n    setTogglePopUp(true);\n  };\n\n  const url = \"/api/submittedTasklist/\";\n  useEffect(() => {\n    async function fetchData() {\n      await axios.get(url + '4/' + `${logInfo.accountID}/${tid}`).then(res => {\n        setData(res.data);\n      });\n      await axios.get(url + '4/' + `${tid}`).then(res => {\n        setTaskInfo(res.data);\n      });\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (!data) return;\n    var list = [];\n\n    for (let i = 0; i < data.length; i++) {\n      list.push(new fileTask(data[i].fileName, data[i].fileScore, data[i].fileType, data[i].fileDate, data[i].filePNP));\n    }\n\n    setTaskList(list);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.center_all,\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      userType: \"제출자\",\n      name: logInfo.name,\n      userID: logInfo.userID\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.list_title,\n      children: \"\\uD30C\\uC77C \\uBAA9\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main_container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sub_container_1,\n        children: [/*#__PURE__*/_jsxDEV(SubmitterTaskRowNav, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.scrollable_div,\n          children: taskList.map(task => /*#__PURE__*/_jsxDEV(SubmitterTaskRow, {\n            task: task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.add_btn,\n      onClick: () => Submit(),\n      children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), togglePopUp && /*#__PURE__*/_jsxDEV(SubmitterSubmit, {\n      setTogglePopUp: setTogglePopUp,\n      taskName: taskInfo[0].Name,\n      taskDesc: taskInfo[0].Description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SubmitterTaskView, \"nrr2pmYZww9CV/dfsVSyoomhap0=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = SubmitterTaskView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubmitterTaskView\");","map":{"version":3,"sources":["/Users/hyunkang/Desktop/School/3-2/데이터베이스/Database2020/client/src/View/SubmitterTaskView.js"],"names":["React","useState","useEffect","styles","useHistory","useLocation","fileTask","PNP","SubmitterTaskRowNav","SubmitterTaskRow","SubmitterSubmit","Nav","useForkRef","SubmitterTaskView","logInfo","history","loggedIn","localStorage","getItem","JSON","parse","push","location","tid","pathname","split","axios","require","default","data","setData","taskInfo","setTaskInfo","taskList","setTaskList","togglePopUp","setTogglePopUp","Submit","url","fetchData","get","accountID","then","res","list","i","length","fileName","fileScore","fileType","fileDate","filePNP","center_all","name","userID","list_title","main_container","sub_container_1","scrollable_div","map","task","add_btn","Name","Description"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,uBAA9B;AAGA,SAASC,mBAAT,QAAoC,mCAApC;AACA,SAASC,gBAAT,QAAiC,gCAAjC;AACA,SAASC,eAAT,QAAgC,+BAAhC;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACrC,MAAIC,OAAJ;AACA,MAAIC,OAAO,GAAGX,UAAU,EAAxB;AACA,QAAMY,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAjB;;AACA,MAAIF,QAAJ,EAAc;AACZF,IAAAA,OAAO,GAAGK,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAAV;AACD,GAFD,MAEO;AACLD,IAAAA,OAAO,CAACM,IAAR,CAAa,GAAb;AACD;;AAED,MAAIC,QAAQ,GAAGjB,WAAW,EAA1B;AACA,MAAIkB,GAAG,GAAGD,QAAQ,CAACE,QAAT,CAAkBC,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAV;;AAEA,QAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,EAAhC;AACA,QAAM,CAAC8B,QAAD,EAAWC,WAAX,IAA0B/B,QAAQ,EAAxC;AACA,QAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,EAAD,CAAxC;AAEA,QAAM,CAACkC,WAAD,EAAcC,cAAd,IAAgCnC,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMoC,MAAM,GAAG,MAAM;AACnB;AACAD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAKA,QAAME,GAAG,GAAG,yBAAZ;AACApC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeqC,SAAf,GAA2B;AACzB,YAAMb,KAAK,CAACc,GAAN,CAAUF,GAAG,GAAC,IAAJ,GAAU,GAAExB,OAAO,CAAC2B,SAAU,IAAGlB,GAAI,EAA/C,EAAkDmB,IAAlD,CAAwDC,GAAD,IAAS;AACpEb,QAAAA,OAAO,CAACa,GAAG,CAACd,IAAL,CAAP;AACD,OAFK,CAAN;AAGA,YAAMH,KAAK,CAACc,GAAN,CAAUF,GAAG,GAAC,IAAJ,GAAU,GAAEf,GAAI,EAA1B,EAA6BmB,IAA7B,CAAmCC,GAAD,IAAS;AAC/CX,QAAAA,WAAW,CAACW,GAAG,CAACd,IAAL,CAAX;AACD,OAFK,CAAN;AAGD;;AACDU,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT;AAaArC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAAC2B,IAAL,EAAW;AACX,QAAIe,IAAI,GAAG,EAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGhB,IAAI,CAACiB,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpCD,MAAAA,IAAI,CAACvB,IAAL,CACE,IAAIf,QAAJ,CACEuB,IAAI,CAACgB,CAAD,CAAJ,CAAQE,QADV,EAEElB,IAAI,CAACgB,CAAD,CAAJ,CAAQG,SAFV,EAGEnB,IAAI,CAACgB,CAAD,CAAJ,CAAQI,QAHV,EAIEpB,IAAI,CAACgB,CAAD,CAAJ,CAAQK,QAJV,EAKErB,IAAI,CAACgB,CAAD,CAAJ,CAAQM,OALV,CADF;AASD;;AACDjB,IAAAA,WAAW,CAACU,IAAD,CAAX;AACD,GAfQ,EAeN,CAACf,IAAD,CAfM,CAAT;AAiBA,sBACE;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAACiD,UAAvB;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,QAAQ,EAAE,KADZ;AAEE,MAAA,IAAI,EAAEtC,OAAO,CAACuC,IAFhB;AAGE,MAAA,MAAM,EAAEvC,OAAO,CAACwC;AAHlB;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAI,MAAA,SAAS,EAAEnD,MAAM,CAACoD,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAK,MAAA,SAAS,EAAEpD,MAAM,CAACqD,cAAvB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAErD,MAAM,CAACsD,eAAvB;AAAA,gCACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAEtD,MAAM,CAACuD,cAAvB;AAAA,oBACCzB,QAAQ,CAAC0B,GAAT,CAAcC,IAAD,iBACZ,QAAC,gBAAD;AAAkB,YAAA,IAAI,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADD;AADD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAmBE;AAAQ,MAAA,SAAS,EAAEzD,MAAM,CAAC0D,OAA1B;AAAmC,MAAA,OAAO,EAAE,MAAMxB,MAAM,EAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,EAsBGF,WAAW,iBACZ,QAAC,eAAD;AACE,MAAA,cAAc,EAAEC,cADlB;AAEE,MAAA,QAAQ,EAAEL,QAAQ,CAAC,CAAD,CAAR,CAAY+B,IAFxB;AAGE,MAAA,QAAQ,EAAE/B,QAAQ,CAAC,CAAD,CAAR,CAAYgC;AAHxB;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAvFM;;GAAMlD,iB;UAEGT,U,EAQCC,W;;;KAVJQ,iB","sourcesContent":["import React, { useState,useEffect} from \"react\";\nimport styles from \"../CSS/mainstyle.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom'\nimport { fileTask, PNP } from \"../Components/classes\";\n\n\nimport { SubmitterTaskRowNav } from \"../Components/SubmitterTaskRowNav\";\nimport { SubmitterTaskRow } from \"../Components/SubmitterTaskRow\";\nimport { SubmitterSubmit } from \"../Components/SubmitterSubmit\";\nimport { Nav } from \"../Components/Nav\";\nimport { useForkRef } from \"@material-ui/core\";\n\nexport const SubmitterTaskView = () => {\n  var logInfo;\n  var history = useHistory();\n  const loggedIn = localStorage.getItem(\"user\");\n  if (loggedIn) {\n    logInfo = JSON.parse(loggedIn);\n  } else {\n    history.push(\"/\");\n  }\n  \n  let location = useLocation();\n  let tid = location.pathname.split('/')[2];\n  \n  const axios = require(\"axios\").default;\n  const [data, setData] = useState();\n  const [taskInfo, setTaskInfo] = useState();\n  const [taskList, setTaskList] = useState([]);\n\n  const [togglePopUp, setTogglePopUp] = useState(false);\n  const Submit = () => {\n    // Get Information About Chosen Task\n    setTogglePopUp(true);\n  };\n  \n  const url = \"/api/submittedTasklist/\";\n  useEffect(() => {\n    async function fetchData() {\n      await axios.get(url+'4/'+`${logInfo.accountID}/${tid}`).then((res) => {\n        setData(res.data);\n      });\n      await axios.get(url+'4/'+`${tid}`).then((res) => {\n        setTaskInfo(res.data);\n      });\n    }\n    fetchData();\n  }, []);\n\n  \n  useEffect(() => {\n    if (!data) return;\n    var list = [];\n    for (let i = 0; i < data.length; i++) {\n      list.push(\n        new fileTask(\n          data[i].fileName,\n          data[i].fileScore,\n          data[i].fileType,\n          data[i].fileDate,\n          data[i].filePNP\n          )\n      );\n    }\n    setTaskList(list);\n  }, [data]);\n\n  return (\n    <div className={styles.center_all}>\n      <Nav\n        userType={\"제출자\"}\n        name={logInfo.name}\n        userID={logInfo.userID}\n      />\n      <h2 className={styles.list_title}>파일 목록</h2>\n      <div className={styles.main_container}>\n        <div className={styles.sub_container_1}>\n          <SubmitterTaskRowNav />\n          <div className={styles.scrollable_div}>\n          {taskList.map((task) => (\n            <SubmitterTaskRow task={task} \n\n            />\n          ))}\n          </div>\n        </div>\n      </div>\n      <button className={styles.add_btn} onClick={() => Submit()}>\n            제출하기\n      </button>\n      {togglePopUp && (\n      <SubmitterSubmit\n        setTogglePopUp={setTogglePopUp}\n        taskName={taskInfo[0].Name}\n        taskDesc={taskInfo[0].Description}\n      />)\n      }\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}