{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/hyunkang/Desktop/School/3-2/\\u1103\\u1166\\u110B\\u1175\\u1110\\u1165\\u1107\\u1166\\u110B\\u1175\\u1109\\u1173/Database2020/src/View/EstimatorMain.js\";\nimport React from \"react\";\nimport styles from \"../CSS/mainstyle.module.css\";\nimport { EstimatorTopRow } from \"../Components/EstimatorTopRow\";\nimport { EstimateUnfinished } from \"../Components/EstimateUnfinished\";\nimport { EstimateFinished } from \"../Components/EstimateFinished\";\nexport const EstimatorMain = ({\n  loginfo\n}) => {\n  class Record {\n    constructor(PDSFID, taskName, taskType, submitter, turn, qt, score, directory) {\n      this.PDSFID = PDSFID;\n      this.taskName = taskName;\n      this.taskType = taskType;\n      this.submitter = submitter;\n      this.turn = turn;\n      this.qt = qt;\n      this.score = score;\n      this.directory = directory;\n    }\n\n  }\n\n  class QT {\n    constructor(total_tup, dup_tup, null_ratio) {\n      this.total_tup = total_tup;\n      this.dup_tup = dup_tup;\n      this.null_ratio = null_ratio;\n    }\n\n  }\n\n  const testRecord = new Record(1, \"임시이름\", \"임시 타입\", \"둘리\", 1, new QT(100, 10, 0.4), null, \"/\");\n  var unfinished = [];\n  var finished = [];\n  unfinished.push(testRecord);\n  unfinished.push(testRecord);\n  unfinished.push(testRecord);\n  finished.push(testRecord);\n  finished.push(testRecord);\n  finished.push(testRecord);\n\n  const LoadTasks = (unfinished, finished) => {\n    /*  function to initially load tasks to lists\n        userID is in \"loginfo.userID\"\n    */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.center_all,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: styles.list_title,\n      children: \"\\uD3C9\\uAC00 \\uD604\\uD669\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.main_container,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sub_container_2,\n        children: [/*#__PURE__*/_jsxDEV(EstimatorTopRow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.scrollable_div,\n          children: unfinished.map(record => /*#__PURE__*/_jsxDEV(EstimateUnfinished, {\n            record: record\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.sub_container_2,\n        style: {\n          marginTop: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(EstimatorTopRow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.scrollable_div,\n          children: finished.map(record => /*#__PURE__*/_jsxDEV(EstimateFinished, {\n            record: record\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_c = EstimatorMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"EstimatorMain\");","map":{"version":3,"sources":["/Users/hyunkang/Desktop/School/3-2/데이터베이스/Database2020/src/View/EstimatorMain.js"],"names":["React","styles","EstimatorTopRow","EstimateUnfinished","EstimateFinished","EstimatorMain","loginfo","Record","constructor","PDSFID","taskName","taskType","submitter","turn","qt","score","directory","QT","total_tup","dup_tup","null_ratio","testRecord","unfinished","finished","push","LoadTasks","center_all","list_title","main_container","sub_container_2","scrollable_div","map","record","marginTop"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styles from \"../CSS/mainstyle.module.css\";\n\nimport { EstimatorTopRow } from \"../Components/EstimatorTopRow\";\nimport { EstimateUnfinished } from \"../Components/EstimateUnfinished\";\nimport { EstimateFinished } from \"../Components/EstimateFinished\";\n\nexport const EstimatorMain = ({ loginfo }) => {\n  class Record {\n    constructor(\n      PDSFID,\n      taskName,\n      taskType,\n      submitter,\n      turn,\n      qt,\n      score,\n      directory\n    ) {\n      this.PDSFID = PDSFID;\n      this.taskName = taskName;\n      this.taskType = taskType;\n      this.submitter = submitter;\n      this.turn = turn;\n      this.qt = qt;\n      this.score = score;\n      this.directory = directory;\n    }\n  }\n  class QT {\n    constructor(total_tup, dup_tup, null_ratio) {\n      this.total_tup = total_tup;\n      this.dup_tup = dup_tup;\n      this.null_ratio = null_ratio;\n    }\n  }\n\n  const testRecord = new Record(\n    1,\n    \"임시이름\",\n    \"임시 타입\",\n    \"둘리\",\n    1,\n    new QT(100, 10, 0.4),\n    null,\n    \"/\"\n  );\n\n  var unfinished = [];\n  var finished = [];\n  unfinished.push(testRecord);\n  unfinished.push(testRecord);\n  unfinished.push(testRecord);\n  finished.push(testRecord);\n  finished.push(testRecord);\n  finished.push(testRecord);\n\n  const LoadTasks = (unfinished, finished) => {\n    /*  function to initially load tasks to lists\n        userID is in \"loginfo.userID\"\n    */\n  };\n\n  return (\n    <div className={styles.center_all}>\n      <h2 className={styles.list_title}>평가 현황</h2>\n      <div className={styles.main_container}>\n        <div className={styles.sub_container_2}>\n          <EstimatorTopRow />\n          <div className={styles.scrollable_div}>\n            {unfinished.map((record) => (\n              <EstimateUnfinished record={record} />\n            ))}\n          </div>\n        </div>\n        <div className={styles.sub_container_2} style={{ marginTop: 0 }}>\n          <EstimatorTopRow />\n          <div className={styles.scrollable_div}>\n            {finished.map((record) => (\n              <EstimateFinished record={record} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}