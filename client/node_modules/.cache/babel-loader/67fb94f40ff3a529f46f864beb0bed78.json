{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/hyunkang/Desktop/School/3-2/\\u1103\\u1166\\u110B\\u1175\\u1110\\u1165\\u1107\\u1166\\u110B\\u1175\\u1109\\u1173/Database2020/src/Components/EstimateUnfinished.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styles from \"../CSS/component.module.css\";\nimport { EstimatorEstimate } from \"./EstimatorEstimate\";\nexport const EstimateUnfinished = ({\n  taskName,\n  taskType,\n  submitter,\n  turn\n}) => {\n  _s();\n\n  const [togglePopUp, setTogglePopUp] = useState(false);\n\n  const Estimate = () => {\n    // Get Information About Chosen Task\n    setTogglePopUp(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.outer_row_unfinished,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.inner_row_unfinished,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: taskType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: submitter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: turn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Estimate(),\n        children: \"\\uD3C9\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), togglePopUp && /*#__PURE__*/_jsxDEV(EstimatorEstimate, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EstimateUnfinished, \"0pwKP8rRLnd3RGAk53vDdbrRF/s=\");\n\n_c = EstimateUnfinished;\n\nvar _c;\n\n$RefreshReg$(_c, \"EstimateUnfinished\");","map":{"version":3,"sources":["/Users/hyunkang/Desktop/School/3-2/데이터베이스/Database2020/src/Components/EstimateUnfinished.js"],"names":["React","useState","styles","EstimatorEstimate","EstimateUnfinished","taskName","taskType","submitter","turn","togglePopUp","setTogglePopUp","Estimate","outer_row_unfinished","inner_row_unfinished"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,SAAtB;AAAiCC,EAAAA;AAAjC,CAAD,KAA6C;AAAA;;AAC7E,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;;AACA,QAAMU,QAAQ,GAAG,MAAM;AACrB;AACAD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACU,oBAAvB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEV,MAAM,CAACW,oBAAvB;AAAA,8BACE;AAAA,kBAAIR;AAAJ;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,kBAAIC;AAAJ;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAE,MAAMG,QAAQ,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAQGF,WAAW,iBAAI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YARlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlBM;;GAAML,kB;;KAAAA,kB","sourcesContent":["import React, { useState } from \"react\";\nimport styles from \"../CSS/component.module.css\";\n\nimport { EstimatorEstimate } from \"./EstimatorEstimate\";\n\nexport const EstimateUnfinished = ({ taskName, taskType, submitter, turn }) => {\n  const [togglePopUp, setTogglePopUp] = useState(false);\n  const Estimate = () => {\n    // Get Information About Chosen Task\n    setTogglePopUp(true);\n  };\n  return (\n    <div className={styles.outer_row_unfinished}>\n      <div className={styles.inner_row_unfinished}>\n        <p>{taskName}</p>\n        <p>{taskType}</p>\n        <p>{submitter}</p>\n        <p>{turn}</p>\n        <button onClick={() => Estimate()}>평가하기</button>\n      </div>\n      {togglePopUp && <EstimatorEstimate />}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}