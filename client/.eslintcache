[{"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\Signup.js":"1","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminMain.js":"2","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterTaskRowNav.js":"3","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\Schema.js":"4","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterTopRow2.js":"5","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimatorEstimate.js":"6","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminUserMng.js":"7","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\Login.js":"8","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminTaskRow.js":"9","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimatorDetail.js":"10","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminAddTask.js":"11","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminTaskView.js":"12","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterTopRow1.js":"13","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\index.js":"14","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterSubmit.js":"15","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\Nav.js":"16","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterJoined.js":"17","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimatorTopRow.js":"18","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\SubmitterTaskView.js":"19","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterWaiting.js":"20","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminUserRowNav.js":"21","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterNew.js":"22","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminTaskEdit.js":"23","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\CreateTaskTwo.js":"24","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\App.js":"25","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminParticipantRow.js":"26","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminUserRow.js":"27","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimateFinished.js":"28","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\CreateTaskFirst.js":"29","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\Template.js":"30","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\classes.js":"31","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\EditUserInfo.js":"32","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminNav.js":"33","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimateUnfinished.js":"34","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterTaskRow.js":"35","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\CreateTaskThree.js":"36","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\modal.js":"37","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\Modal.js":"38"},{"size":5911,"mtime":1606767198538,"results":"39","hashOfConfig":"40"},{"size":1099,"mtime":1606677316653,"results":"41","hashOfConfig":"40"},{"size":290,"mtime":1606677316363,"results":"42","hashOfConfig":"40"},{"size":637,"mtime":1606757839337,"results":"43","hashOfConfig":"40"},{"size":252,"mtime":1606677316419,"results":"44","hashOfConfig":"40"},{"size":2397,"mtime":1606677316088,"results":"45","hashOfConfig":"40"},{"size":2810,"mtime":1606677316734,"results":"46","hashOfConfig":"40"},{"size":2656,"mtime":1606758916950,"results":"47","hashOfConfig":"40"},{"size":743,"mtime":1606677315809,"results":"48","hashOfConfig":"40"},{"size":1970,"mtime":1606677316058,"results":"49","hashOfConfig":"40"},{"size":1413,"mtime":1606677316622,"results":"50","hashOfConfig":"40"},{"size":4088,"mtime":1606677316707,"results":"51","hashOfConfig":"40"},{"size":298,"mtime":1606677316389,"results":"52","hashOfConfig":"40"},{"size":266,"mtime":1606677315435,"results":"53","hashOfConfig":"40"},{"size":2153,"mtime":1606757874046,"results":"54","hashOfConfig":"40"},{"size":1561,"mtime":1606677316199,"results":"55","hashOfConfig":"40"},{"size":617,"mtime":1606677316253,"results":"56","hashOfConfig":"40"},{"size":285,"mtime":1606677316116,"results":"57","hashOfConfig":"40"},{"size":1706,"mtime":1606677316878,"results":"58","hashOfConfig":"40"},{"size":480,"mtime":1606677316449,"results":"59","hashOfConfig":"40"},{"size":311,"mtime":1606677315892,"results":"60","hashOfConfig":"40"},{"size":528,"mtime":1606677316280,"results":"61","hashOfConfig":"40"},{"size":5875,"mtime":1606677316680,"results":"62","hashOfConfig":"40"},{"size":2476,"mtime":1606757762722,"results":"63","hashOfConfig":"40"},{"size":1174,"mtime":1606682732077,"results":"64","hashOfConfig":"40"},{"size":950,"mtime":1606757673005,"results":"65","hashOfConfig":"40"},{"size":583,"mtime":1606677315865,"results":"66","hashOfConfig":"40"},{"size":819,"mtime":1606757778117,"results":"67","hashOfConfig":"40"},{"size":2478,"mtime":1606757725318,"results":"68","hashOfConfig":"40"},{"size":1540,"mtime":1606733589976,"results":"69","hashOfConfig":"40"},{"size":2127,"mtime":1606847235061,"results":"70","hashOfConfig":"40"},{"size":5822,"mtime":1606832192485,"results":"71","hashOfConfig":"40"},{"size":1841,"mtime":1606757660213,"results":"72","hashOfConfig":"40"},{"size":791,"mtime":1606757790698,"results":"73","hashOfConfig":"40"},{"size":454,"mtime":1606677316337,"results":"74","hashOfConfig":"40"},{"size":3311,"mtime":1606757738765,"results":"75","hashOfConfig":"40"},{"size":423,"mtime":1606831050597,"results":"76","hashOfConfig":"40"},{"size":491,"mtime":1606837521190,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"py4jjr",{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"85"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\Signup.js",["178","179"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminMain.js",[],["180","181"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterTaskRowNav.js",[],["182","183"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\Schema.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterTopRow2.js",[],["184","185"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimatorEstimate.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminUserMng.js",["186"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { AdminNav } from \"../Components/AdminNav\";\nimport { AdminUserRowNav } from \"../Components/AdminUserRowNav\";\nimport { AdminUserRow } from \"../Components/AdminUserRow\";\nimport styles from \"../CSS/mainstyle.module.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { AdminUser } from \"../Components/classes\";\n\nconst AdminUserMng = () => {\n  var list = [];\n  const [userList, setUserList] = useState(list);\n  const user = new AdminUser(111, \"둘리\", \"제출자\", 21, \"F\", \"dully123\", [\n    \"task1\",\n    \"task2\",\n    \"task3\",\n  ]);\n  list.push(user);\n  list.push(user);\n\n  const [text, setText] = useState(\"\");\n\n  var logInfo;\n  var history = useHistory();\n  const loggedIn = localStorage.getItem(\"user\");\n  if (loggedIn) {\n    logInfo = JSON.parse(loggedIn);\n  } else {\n    history.push(\"/\");\n  }\n\n  const Search = () => {\n    var source = document.getElementById(\"sources\");\n    var value = source.value;\n    console.log(value);\n    // Find matching users with value and text\n  };\n\n  return (\n    <div>\n      <AdminNav\n        userType={\"관리자\"}\n        name={logInfo.name}\n        userID={logInfo.userID}\n      />\n      <div className={styles.center_all}>\n        <h2 className={styles.list_title}>회원 목록</h2>\n        <div className={styles.main_container}>\n          <div className={styles.sub_container_1}>\n            <AdminUserRowNav />\n            <div className={styles.scrollable_div}>\n              {userList.map((user) => (\n                <AdminUserRow user={user} />\n              ))}\n            </div>\n          </div>\n        </div>\n        <div className={styles.last_row}>\n          <div>\n            <select\n              name=\"sources\"\n              id=\"sources\"\n              className={`${styles.custom_select} ${styles.sources}`}\n              placeholder=\"검색 옵션: \"\n            >\n              <option value=\"0\">검색 옵션:</option>\n              <option value=\"name\">이름</option>\n              <option value=\"type\">역할</option>\n              <option value=\"age\">나이</option>\n              <option value=\"sex\">성별</option>\n              <option value=\"id\">ID</option>\n              <option value=\"task\">참여태스크</option>\n            </select>\n          </div>\n          <div>\n            <input\n              type=\"text\"\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            />\n          </div>\n          <div>\n            <IconButton onClick={() => Search()}>\n              <SearchIcon className={styles.search_button} />\n            </IconButton>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminUserMng;\n",["187","188"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\Login.js",["189","190","191","192"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"../CSS/loginstyle.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"../Images/로고.png\";\nimport { User } from \"./classes\";\n// import axios from \"../axios\";\n\nexport const Login = () => {\n  var id, pw;\n  const axios = require(\"axios\");\n  var type = {\n    Submitter: \"제출자\",\n    Administrator: \"관리자\",\n    Estimator: \"평가자\",\n  };\n  var history = useHistory();\n  const [data, setData] = useState();\n\n  const handleLogin = async () => {\n    const url = \"/api/loginAuth\";\n    const res = await axios.get(url + `/${id}&${pw}`).catch((err) => {\n      if (err.response) {\n        console.log(err.responsse);\n      } else if (err.request) {\n        console.log(\"never recieved a response\");\n      }\n    });\n    if (res && res.data) setData(res);\n  };\n\n  useEffect(() => {\n    if (!data) {\n      return;\n    }\n    if (data.data.length == 0) {\n      alert(\"아이디와 비밀번호를 확인해주세요.\");\n      return;\n    }\n    let loginInfo = new User(\n      data.data[0].AccountID,\n      data.data[0].UserID,\n      type[data.data[0].Role],\n      data.data[0].Name,\n      data.data[0].Gender.data,\n      data.data[0].Address,\n      data.data[0].BirthDate,\n      data.data[0].Phone\n    );\n    console.log(loginInfo);\n    localStorage.setItem(`user`, JSON.stringify(loginInfo));\n    history.push(\"/\");\n  }, [data]);\n\n  return (\n    <div className={styles.main_container}>\n      <div className={styles.div_signin}>\n        <img className={styles.main_logo} src={logo} alt=\"메인 로고\" />\n        <p className={`${styles.notice} ${styles.login_p}`}>로그인 하세요</p>\n        <input\n          type=\"email\"\n          id=\"inputEmail\"\n          className={styles.div_input}\n          placeholder=\"User ID\"\n          value={id}\n          onChange={(e) => (id = e.target.value)}\n        />\n        <input\n          type=\"password\"\n          id=\"inputPassword\"\n          className={styles.div_input}\n          placeholder=\"Password\"\n          value={pw}\n          onChange={(e) => (pw = e.target.value)}\n        />\n        <br />\n        <button\n          className={styles.button}\n          type=\"submit\"\n          onClick={() => handleLogin()}\n        >\n          로그인\n        </button>\n        <br />\n        <a\n          href=\"\"\n          id={styles.div_signup}\n          className={styles.login_a}\n          href=\"./signup\"\n        >\n          회원가입\n        </a>\n        <p className={`${styles.copyright} ${styles.login_p}`}>\n          &copy; 연세대학교 데이터베이스 14팀\n        </p>\n      </div>\n    </div>\n  );\n};\n",["193","194"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminTaskRow.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimatorDetail.js",["195","196"],"import React, { useState, useEffect } from \"react\";\nimport styles from \"../CSS/component.module.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { IconButton } from \"@material-ui/core\";\nimport styles2 from \"../CSS/mainstyle.module.css\";\n\nexport const EstimatorDetail = ({ record, setTogglePopUp }) => {\n  const download = (record) => {\n    console.log(record);\n  };\n  return (\n    <div className={styles.popup}>\n      <IconButton\n        className={styles.close_btn}\n        style={{ position: \"absolute\" }}\n        onClick={() => setTogglePopUp(false)}\n      >\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      <h3>태스크 이름</h3>\n      <p>{record.taskName}</p>\n      <h3>태스크 타입</h3>\n      <p>{record.taskType}</p>\n      <h3>제출자</h3>\n      <p>{record.submitter}</p>\n      <h3>회차</h3>\n      <p>{record.turn}</p>\n      <table className={styles.qualitative_test}>\n        <thead>\n          <tr>\n            <th>총 튜플 수</th>\n            <th>총 중복 튜플 수</th>\n            <th>Null Ratio</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <th>{record.qt.total_tup}</th>\n            <th>{record.qt.dup_tup}</th>\n            <th>{record.qt.null_ratio}</th>\n          </tr>\n        </tbody>\n      </table>\n      <h3 style={{ textAlign: \"center\" }}>점수</h3>\n      <div className={styles.evaluate}>\n        <button disabled>-</button>\n        <input type=\"number\" value={record.score} disabled />\n        <button disabled>+</button>\n      </div>\n      <div className={styles2.button_container}>\n        <button\n          className={`${styles2.add_btn} ${styles2.button_row}`}\n          onClick={() => download(record)}\n        >\n          다운로드\n        </button>\n        <button\n          className={`${styles2.add_btn} ${styles2.button_row}`}\n          onClick={() => setTogglePopUp(false)}\n        >\n          완료\n        </button>\n      </div>\n    </div>\n  );\n};\n","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminAddTask.js",["197","198"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"../CSS/mainstyle.module.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { NewTask } from \"../Components/classes\";\n\nimport { AdminNav } from \"../Components/AdminNav\";\nimport { CreateTaskFirst } from \"../Components/CreateTaskFirst\";\nimport { CreateTaskTwo } from \"../Components/CreateTaskTwo\";\nimport { CreateTaskThree } from \"../Components/CreateTaskThree\";\n\nconst AdminAddTask = () => {\n  const [step, setStep] = useState(1);\n  const [newTask, setNewTask] = useState(new NewTask());\n  var logInfo;\n  var history = useHistory();\n  const loggedIn = localStorage.getItem(\"user\");\n  if (loggedIn) {\n    logInfo = JSON.parse(loggedIn);\n  } else {\n    history.push(\"/\");\n  }\n\n  useEffect(() => {\n    newTask.RDTSchema = [];\n  }, []);\n\n  return (\n    <div>\n      <AdminNav\n        userType={\"관리자\"}\n        name={logInfo.name}\n        userID={logInfo.userID}\n      />\n      <div className={styles.center_all}>\n        <div className={styles.main_container}>\n          {step === 1 && (\n            <CreateTaskFirst setStep={setStep} newTask={newTask} />\n          )}\n          {step === 2 && <CreateTaskTwo setStep={setStep} newTask={newTask} />}\n          {step === 3 && (\n            <CreateTaskThree setStep={setStep} newTask={newTask} />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminAddTask;\n",["199","200"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminTaskView.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterTopRow1.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\index.js",[],["201","202"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterSubmit.js",["203","204","205"],"import React, { useState, Component } from \"react\";\nimport styles from \"../CSS/component.module.css\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { IconButton } from \"@material-ui/core\";\n\nimport Select from 'react-select';\n\nexport const SubmitterSubmit = ({\n  taskName,\n  taskDesc,\n  setTogglePopUp,\n}) => {\n  const RDTtypes = [\n    { value : \"type1\", label : \"type1\"},\n    { value : \"type2\", label : \"type2\"},\n    { value : \"type3\", label : \"type3\"},\n  ];\n\n  const [highlighted, setHighlighted] = React.useState(false);\n\n  const Upload = () => {\n    // process uploading\n    setTogglePopUp(false);\n  };\n  return (\n    <div className={styles.popup_sub}>      \n      <IconButton\n        className={styles.close_btn}\n        style={{ position: \"absolute\" }}\n        onClick={() => setTogglePopUp(false)}\n      >\n        <CloseIcon fontSize=\"large\" />\n      </IconButton>\n      <div className={styles.info}>\n        <h3>태스크 이름</h3>\n        <p>{taskName}</p>\n      </div>\n      <div className={styles.info}>\n        <h3>태스크 정보</h3>\n        <p>{taskDesc}</p>\n      </div>\n\n      <h3>파일 업로드</h3>\n      <div className={`${styles.file_input} ${\n        highlighted ? `${styles.border_blue}` : `${styles.border_black}`}`}\n        onDragEnter={() => {\n          setHighlighted(true);\n        }}\n        onDragLeave={() => {\n          setHighlighted(false);\n        }}\n\n        onDragOver={(e) => {\n          e.preventDefault();\n        }}\n        onDrop={(e) => {\n          e.preventDefault();\n          setHighlighted(false);\n\n          Array.from(e.dataTransfer.files)\n            .forEach((file) => {\n              const text = file;\n            });\n        }}\n      >\n        제출할 파일을 끌어다 놓으시오.\n      </div>\n\n      <div className={styles.info}>\n      <h3>Row Data Type</h3>\n\n        <Select  \n          options={RDTtypes}\n          placeholder=\"Raw Data Type을 선택하시오.\"\n          className = {styles.select_rdt}\n          isSearchable\n        />\n      </div>\n\n      <button className={styles.complete_btn} onClick={() => Upload()}>\n        제출\n      </button>\n    </div>\n  );\n};","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\Nav.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterJoined.js",[],["206","207"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimatorTopRow.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\SubmitterTaskView.js",["208"],"import React, { useState } from \"react\";\nimport styles from \"../CSS/mainstyle.module.css\";\n\nimport { SubmitterTaskRowNav } from \"../Components/SubmitterTaskRowNav\";\nimport { SubmitterTaskRow } from \"../Components/SubmitterTaskRow\";\nimport { SubmitterSubmit } from \"../Components/SubmitterSubmit\";\nimport { Nav } from \"../Components/Nav\";\n\nexport const SubmitterTaskView = ({\n  taskID,\n  taskName,\n  taskDesc,\n  taskDate,\n  taskNum,\n }) => {\n\n  var logInfo;\n  const loggedIn = localStorage.getItem(\"user\");\n  console.log(loggedIn);\n  if (loggedIn) {\n    logInfo = JSON.parse(loggedIn);\n  }\n\n  const [togglePopUp, setTogglePopUp] = useState(false);\n  const Submit = () => {\n    // Get Information About Chosen Task\n    setTogglePopUp(true);\n  };\n\n  return (\n    <div className={styles.center_all}>\n      <Nav\n        userType={loggedIn.userType}\n        name={loggedIn.userName}\n        userID={loggedIn.userID}\n      />\n      <h2 className={styles.list_title}>파일 목록</h2>\n      <div className={styles.main_container}>\n        <div className={styles.sub_container_1}>\n          <SubmitterTaskRowNav />\n          <div className={styles.scrollable_div}>\n            <SubmitterTaskRow\n              fileName=\"코로나.csv\"\n              fileScore=\"86\"\n              fileType=\"국내 확진자 Type\"\n              fileDate=\"20/11/25\"\n              filePNP=\"P\"\n            />\n          </div>\n        </div>\n      </div>\n      <button className={styles.add_btn} onClick={() => Submit()}>\n            제출하기\n      </button>\n      {togglePopUp && (\n      <SubmitterSubmit\n        setTogglePopUp={setTogglePopUp}\n        taskID={taskID}\n        taskDesc={taskDesc}\n      />)\n      }\n    </div>\n  );\n};\n",["209","210"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterWaiting.js",["211","212"],"import React, { useState } from \"react\";\nimport styles from \"../CSS/component.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const SubmitterWaiting = ({\n  taskName,\n  taskDesc,\n}) => {\n  \n  return (\n    <div>\n      <div className={styles.row_container}>\n        <p>{taskName}</p>\n        <p>{taskDesc}</p>\n        <div>\n          <button className={styles.row_button}>\n            승인 대기중\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminUserRowNav.js",[],["213","214"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterNew.js",["215","216"],"import React, { useState } from \"react\";\nimport styles from \"../CSS/component.module.css\";\nimport { Link } from \"react-router-dom\";\n\nexport const SubmitterNew = ({\n  taskName,\n  taskDesc,\n}) => {\n  const Apply = () => {\n    \n  };\n\n  return (\n    <div>\n      <div className={styles.row_container}>\n        <p>{taskName}</p>\n        <p>{taskDesc}</p>\n        <div>\n          <button className={styles.row_button} onClick={() => Apply()}>\n            참여신청\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n",["217","218"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\AdminTaskEdit.js",["219"],"import React, { useState } from \"react\";\nimport styles from \"../CSS/mainstyle.module.css\";\nimport TextField from \"@material-ui/core/TextField\";\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { useHistory } from \"react-router-dom\";\nimport { Pair } from \"../Components/classes\";\nimport { RSC } from \"../Components/classes\";\nimport { Schema } from \"../Components/Schema\";\nimport { AdminNav } from \"../Components/AdminNav\";\n\nconst AdminTaskEdit = (props) => {\n  const task = props.location.task;\n  const [newPassScore, setNewPassScore] = useState(task.passScore);\n  const [toggleAdd, setToggleAdd] = useState(false);\n  const [name, setName] = useState();\n  const [num, setNum] = useState(2);\n  const [row, setRow] = useState([1]);\n  const [pairList, setPairList] = useState([new Pair()]);\n\n  var logInfo;\n  var history = useHistory();\n  const loggedIn = localStorage.getItem(\"user\");\n  if (loggedIn) {\n    logInfo = JSON.parse(loggedIn);\n  } else {\n    history.push(\"/\");\n  }\n\n  const handleRemove = () => {\n    if (num === 2) {\n      return;\n    }\n    setNum(num - 1);\n    setRow(row.filter((item) => item !== num - 1));\n    setPairList(pairList.slice(0, -1));\n  };\n\n  const handleComplete = () => {\n    if (name === \"\" || name === undefined || name === null) {\n      setToggleAdd(!toggleAdd);\n    } else {\n      var finalList = [];\n      for (var i = 0; i < pairList.length; i++) {\n        if (pairList[i].name !== undefined && pairList[i].type !== undefined) {\n          finalList.push(pairList[i]);\n        }\n      }\n      var RDT = new RSC(name, finalList);\n    }\n  };\n\n  return (\n    <div>\n      <AdminNav\n        userType={\"관리자\"}\n        name={logInfo.name}\n        userID={logInfo.userID}\n      />\n      <div className={styles.center_all}>\n        <div className={styles.main_container}>\n          {!toggleAdd && (\n            <div className={styles.sub_container_1}>\n              <div className={styles.ca}>\n                <form noValidate autoComplete=\"off\">\n                  <div className={styles.nbc}>\n                    <TextField\n                      className={styles.name_box}\n                      id=\"name\"\n                      label=\"태스크 이름\"\n                      defaultValue=\"임시 이름\"\n                      InputProps={{\n                        readOnly: true,\n                      }}\n                    />\n                  </div>\n                  <div className={styles.nbc}>\n                    <TextField\n                      className={styles.name_box}\n                      id=\"pass_score\"\n                      label=\"패스 기준 점수\"\n                      value={newPassScore}\n                      type=\"number\"\n                      shrink\n                      onChange={(e) => {\n                        if (e.target.value < 0) {\n                          setNewPassScore(0);\n                        } else if (e.target.value > 10) {\n                          setNewPassScore(10);\n                        } else {\n                          setNewPassScore(e.target.value);\n                        }\n                      }}\n                    />\n                  </div>\n                </form>\n                <div className={styles.button_container}>\n                  <button\n                    className={`${styles.add_btn} ${styles.button_row}`}\n                    onClick={() => setToggleAdd(!toggleAdd)}\n                  >\n                    원본데이터타입 추가\n                  </button>\n                  <button\n                    className={`${styles.add_btn} ${styles.button_row}`}\n                    onClick={() => history.push(\"/\")}\n                  >\n                    완료\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n          {toggleAdd && (\n            <div className={`${styles.sub_container_a} ${styles.ninety}`}>\n              <div className={styles.title}>\n                <h1>원본데이터타입 스키마 설정</h1>\n              </div>\n              <form noValidate autoComplete=\"off\">\n                <div>\n                  <TextField\n                    className={styles.input_box}\n                    id=\"name\"\n                    label=\"원본데이터타입 이름\"\n                    placeholder=\"원본데이터 타입 이름을 입력하시오.\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  />\n                </div>\n                <div className={`${styles.scrollable_div} ${styles.new_box}`}>\n                  {row.map((item) => (\n                    <Schema key={item} pair={pairList[item - 1]} />\n                  ))}\n                </div>\n              </form>\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n                <IconButton\n                  onClick={() => {\n                    handleRemove();\n                  }}\n                >\n                  <RemoveCircleIcon />\n                </IconButton>\n                <IconButton\n                  onClick={() => {\n                    setPairList([...pairList, new Pair()]);\n                    setNum(num + 1);\n                    setRow([...row, num]);\n                  }}\n                >\n                  <AddCircleIcon />\n                </IconButton>\n              </div>\n              <div className={styles.button_container}>\n                <button\n                  className={`${styles.add_btn} ${styles.button_row}`}\n                  onClick={() => handleComplete()}\n                >\n                  완료\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminTaskEdit;\n",["220","221"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\CreateTaskTwo.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminParticipantRow.js",["222","223","224"],"import Axios from \"axios\";\nimport React from \"react\";\nimport styles from \"../CSS/component.module.css\";\n\nexport const AdminParticipantRow = ({ reload, user, taskID, setReload }) => {\n  const axios = require(\"axios\").default;\n  const Admit = async (admit) => {\n    await axios\n      .post(\"/api/userQueue/Admit\", {\n        AccountID: user.AccountID,\n        newValue: admit,\n        targetTaskID: taskID,\n      })\n      .then((res) => console.log(res));\n    setReload(!reload);\n  };\n  return (\n    <div className={styles.row_container}>\n      <p>{user.name}</p>\n      <p>{user.sex}</p>\n      <p>{user.birth}</p>\n      <p>{user.score}</p>\n      {user.admit == 1 && <p>수락됨</p>}\n      {user.admit == 0 && <p>거절됨</p>}\n      {!user.admit && (\n        <div className={styles.btn_row}>\n          <button onClick={() => Admit(1)}>승인</button>\n          <button onClick={() => Admit(0)}>거절</button>\n        </div>\n      )}\n    </div>\n  );\n};","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminUserRow.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimateFinished.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\CreateTaskFirst.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\Template.js",["225","226"],"import React, { useEffect, useState } from \"react\";\nimport styles from \"../CSS/template.module.css\";\nimport { Nav } from \"../Components/Nav\";\nimport { AdminNav } from \"../Components/AdminNav\";\n\nimport { Login } from \"../Components/Login\";\nimport { EstimatorMain } from \"./EstimatorMain\";\nimport { AdminMain } from \"./AdminMain\";\nimport { SubmitterMain } from \"./SubmitterMain\";\n\nexport const Template = () => {\n  \n  var logInfo;\n  const loggedIn = localStorage.getItem(\"user\");\n  if (loggedIn) {\n    logInfo = JSON.parse(loggedIn);\n  }\n\n  return (\n    <div>\n      {!logInfo && <Login />}\n      {logInfo && (\n        <div className={styles.main_container}>\n          {logInfo.userType === \"평가자\" && (\n            <Nav\n              userType={logInfo.userType}\n              name={logInfo.name}\n              userID={logInfo.userID}\n            />\n          )}\n          {logInfo.userType === \"평가자\" && <EstimatorMain loginfo={logInfo} />}\n          {logInfo.userType === \"관리자\" && (\n            <AdminNav\n              userType={logInfo.userType}\n              name={logInfo.name}\n              userID={logInfo.userID}\n            />\n          )}\n          {logInfo.userType === \"관리자\" && <AdminMain />}\n          {logInfo.userType === \"제출자\" && (\n            <Nav\n              userType={logInfo.userType}\n              name={logInfo.name}\n              userID={logInfo.userID}\n            />\n          )}\n          {logInfo.userType === \"제출자\" && <SubmitterMain />}\n        </div>\n      )}\n    </div>\n  );\n};\n","C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\classes.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\View\\EditUserInfo.js",["227"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\AdminNav.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\EstimateUnfinished.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\SubmitterTaskRow.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\CreateTaskThree.js",[],["228","229"],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\modal.js",[],"C:\\Users\\user\\Desktop\\데베\\Database2020-Hyun\\Database2020-Hyun\\client\\src\\Components\\Modal.js",[],{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"234","line":4,"column":10,"nodeType":"232","messageId":"233","endLine":4,"endColumn":14},{"ruleId":"235","replacedBy":"236"},{"ruleId":"237","replacedBy":"238"},{"ruleId":"235","replacedBy":"239"},{"ruleId":"237","replacedBy":"240"},{"ruleId":"235","replacedBy":"241"},{"ruleId":"237","replacedBy":"242"},{"ruleId":"230","severity":1,"message":"243","line":13,"column":20,"nodeType":"232","messageId":"233","endLine":13,"endColumn":31},{"ruleId":"235","replacedBy":"244"},{"ruleId":"237","replacedBy":"245"},{"ruleId":"246","severity":1,"message":"247","line":35,"column":26,"nodeType":"248","messageId":"249","endLine":35,"endColumn":28},{"ruleId":"250","severity":1,"message":"251","line":52,"column":6,"nodeType":"252","endLine":52,"endColumn":12,"suggestions":"253"},{"ruleId":"254","severity":1,"message":"255","line":84,"column":9,"nodeType":"256","endLine":89,"endColumn":10},{"ruleId":"257","severity":1,"message":"258","line":88,"column":11,"nodeType":"259","endLine":88,"endColumn":26},{"ruleId":"235","replacedBy":"260"},{"ruleId":"237","replacedBy":"261"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"262","line":1,"column":27,"nodeType":"232","messageId":"233","endLine":1,"endColumn":36},{"ruleId":"230","severity":1,"message":"263","line":13,"column":19,"nodeType":"232","messageId":"233","endLine":13,"endColumn":29},{"ruleId":"250","severity":1,"message":"264","line":25,"column":6,"nodeType":"252","endLine":25,"endColumn":8,"suggestions":"265"},{"ruleId":"235","replacedBy":"266"},{"ruleId":"237","replacedBy":"267"},{"ruleId":"235","replacedBy":"268"},{"ruleId":"237","replacedBy":"269"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"270","line":1,"column":27,"nodeType":"232","messageId":"233","endLine":1,"endColumn":36},{"ruleId":"230","severity":1,"message":"271","line":62,"column":21,"nodeType":"232","messageId":"233","endLine":62,"endColumn":25},{"ruleId":"235","replacedBy":"272"},{"ruleId":"237","replacedBy":"273"},{"ruleId":"230","severity":1,"message":"274","line":21,"column":5,"nodeType":"232","messageId":"233","endLine":21,"endColumn":12},{"ruleId":"235","replacedBy":"275"},{"ruleId":"237","replacedBy":"276"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"277","line":3,"column":10,"nodeType":"232","messageId":"233","endLine":3,"endColumn":14},{"ruleId":"235","replacedBy":"278"},{"ruleId":"237","replacedBy":"279"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":25},{"ruleId":"230","severity":1,"message":"277","line":3,"column":10,"nodeType":"232","messageId":"233","endLine":3,"endColumn":14},{"ruleId":"235","replacedBy":"280"},{"ruleId":"237","replacedBy":"281"},{"ruleId":"230","severity":1,"message":"282","line":50,"column":11,"nodeType":"232","messageId":"233","endLine":50,"endColumn":14},{"ruleId":"235","replacedBy":"283"},{"ruleId":"237","replacedBy":"284"},{"ruleId":"230","severity":1,"message":"285","line":1,"column":8,"nodeType":"232","messageId":"233","endLine":1,"endColumn":13},{"ruleId":"246","severity":1,"message":"247","line":23,"column":19,"nodeType":"248","messageId":"249","endLine":23,"endColumn":21},{"ruleId":"246","severity":1,"message":"247","line":24,"column":19,"nodeType":"248","messageId":"249","endLine":24,"endColumn":21},{"ruleId":"230","severity":1,"message":"262","line":1,"column":17,"nodeType":"232","messageId":"233","endLine":1,"endColumn":26},{"ruleId":"230","severity":1,"message":"231","line":1,"column":28,"nodeType":"232","messageId":"233","endLine":1,"endColumn":36},{"ruleId":"230","severity":1,"message":"286","line":20,"column":9,"nodeType":"232","messageId":"233","endLine":20,"endColumn":13},{"ruleId":"235","replacedBy":"287"},{"ruleId":"237","replacedBy":"288"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'User' is defined but never used.","no-native-reassign",["289"],"no-negated-in-lhs",["290"],["289"],["290"],["289"],["290"],"'setUserList' is assigned a value but never used.",["289"],["290"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'type'. Either include them or remove the dependency array.","ArrayExpression",["291"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["289"],["290"],"'useEffect' is defined but never used.","'setNewTask' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'newTask'. Either include it or remove the dependency array.",["292"],["289"],["290"],["289"],["290"],"'Component' is defined but never used.","'text' is assigned a value but never used.",["289"],["290"],"'logInfo' is assigned a value but never used.",["289"],["290"],"'Link' is defined but never used.",["289"],["290"],["289"],["290"],"'RDT' is assigned a value but never used.",["289"],["290"],"'Axios' is defined but never used.","'bool' is assigned a value but never used.",["289"],["290"],"no-global-assign","no-unsafe-negation",{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},"Update the dependencies array to be: [data, history, type]",{"range":"297","text":"298"},"Update the dependencies array to be: [newTask]",{"range":"299","text":"300"},[1364,1370],"[data, history, type]",[807,809],"[newTask]"]