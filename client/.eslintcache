[{"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\reportWebVitals.js":"2","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\App.js":"3","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\Signup.js":"4","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\Template.js":"5","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminTaskView.js":"6","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminUserMng.js":"7","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminAddTask.js":"8","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminTaskEdit.js":"9","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\SubmitterTaskView.js":"10","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\EditUserInfo.js":"11","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\UserDetail.js":"12","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminMain.js":"13","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\SubmitterMain.js":"14","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\EstimatorMain.js":"15","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Login.js":"16","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Nav.js":"17","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\classes.js":"18","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminNav.js":"19","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Loading.js":"20","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminParticipantRow.js":"21","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminUserRow.js":"22","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminParticipantRowNav.js":"23","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminUserRowNav.js":"24","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\CreateTaskFirst.js":"25","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterTaskRowNav.js":"26","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\CreateTaskThree.js":"27","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterTaskRow.js":"28","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterSubmit.js":"29","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\UserDetailEstimatorNav.js":"30","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Modal.js":"31","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\UserDetailSubmitterNav.js":"32","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\UserDetailSubmitter.js":"33","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\UserDetailEstimator.js":"34","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Schema.js":"35","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\CreateTaskTwo.js":"36","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterTopRow1.js":"37","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminTaskRowNav.js":"38","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterWaiting.js":"39","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminTaskRow.js":"40","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterTopRow2.js":"41","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterNew.js":"42","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterJoined.js":"43","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimatorTopRow.js":"44","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimateFinished.js":"45","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimateUnfinished.js":"46","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimatorDetail.js":"47","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimatorEstimate.js":"48"},{"size":279,"mtime":1607018557580,"results":"49","hashOfConfig":"50"},{"size":377,"mtime":1607018557582,"results":"51","hashOfConfig":"50"},{"size":1326,"mtime":1607018557458,"results":"52","hashOfConfig":"50"},{"size":6939,"mtime":1607018557566,"results":"53","hashOfConfig":"50"},{"size":1572,"mtime":1607018557573,"results":"54","hashOfConfig":"50"},{"size":5686,"mtime":1607018557558,"results":"55","hashOfConfig":"50"},{"size":5008,"mtime":1607018557560,"results":"56","hashOfConfig":"50"},{"size":1497,"mtime":1607018557551,"results":"57","hashOfConfig":"50"},{"size":6338,"mtime":1607018557554,"results":"58","hashOfConfig":"50"},{"size":1770,"mtime":1607018557569,"results":"59","hashOfConfig":"50"},{"size":6523,"mtime":1607018557562,"results":"60","hashOfConfig":"50"},{"size":5992,"mtime":1607018557575,"results":"61","hashOfConfig":"50"},{"size":1883,"mtime":1607018557553,"results":"62","hashOfConfig":"50"},{"size":1952,"mtime":1607018557568,"results":"63","hashOfConfig":"50"},{"size":1761,"mtime":1607018557564,"results":"64","hashOfConfig":"50"},{"size":2750,"mtime":1607018557500,"results":"65","hashOfConfig":"50"},{"size":1633,"mtime":1607018557503,"results":"66","hashOfConfig":"50"},{"size":3157,"mtime":1607018557535,"results":"67","hashOfConfig":"50"},{"size":1925,"mtime":1607018557474,"results":"68","hashOfConfig":"50"},{"size":276,"mtime":1607018557499,"results":"69","hashOfConfig":"50"},{"size":956,"mtime":1607018557476,"results":"70","hashOfConfig":"50"},{"size":1190,"mtime":1607018557483,"results":"71","hashOfConfig":"50"},{"size":301,"mtime":1607018557478,"results":"72","hashOfConfig":"50"},{"size":342,"mtime":1607018557484,"results":"73","hashOfConfig":"50"},{"size":2735,"mtime":1607018557486,"results":"74","hashOfConfig":"50"},{"size":304,"mtime":1607018557516,"results":"75","hashOfConfig":"50"},{"size":4252,"mtime":1607088027563,"results":"76","hashOfConfig":"50"},{"size":477,"mtime":1607018557513,"results":"77","hashOfConfig":"50"},{"size":2239,"mtime":1607018557512,"results":"78","hashOfConfig":"50"},{"size":350,"mtime":1607018557529,"results":"79","hashOfConfig":"50"},{"size":807,"mtime":1607018557502,"results":"80","hashOfConfig":"50"},{"size":425,"mtime":1607018557533,"results":"81","hashOfConfig":"50"},{"size":519,"mtime":1607018557530,"results":"82","hashOfConfig":"50"},{"size":548,"mtime":1607018557526,"results":"83","hashOfConfig":"50"},{"size":3886,"mtime":1607018557506,"results":"84","hashOfConfig":"50"},{"size":2707,"mtime":1607018557489,"results":"85","hashOfConfig":"50"},{"size":312,"mtime":1607018557518,"results":"86","hashOfConfig":"50"},{"size":328,"mtime":1607018557482,"results":"87","hashOfConfig":"50"},{"size":503,"mtime":1607018557522,"results":"88","hashOfConfig":"50"},{"size":770,"mtime":1607018557480,"results":"89","hashOfConfig":"50"},{"size":265,"mtime":1607018557521,"results":"90","hashOfConfig":"50"},{"size":554,"mtime":1607018557509,"results":"91","hashOfConfig":"50"},{"size":643,"mtime":1607018557507,"results":"92","hashOfConfig":"50"},{"size":300,"mtime":1607018557497,"results":"93","hashOfConfig":"50"},{"size":849,"mtime":1607018557491,"results":"94","hashOfConfig":"50"},{"size":821,"mtime":1607018557492,"results":"95","hashOfConfig":"50"},{"size":2036,"mtime":1607018557494,"results":"96","hashOfConfig":"50"},{"size":2485,"mtime":1607018557495,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"12wcmhs",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"100"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"100"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"100"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"100"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\index.js",[],["211","212"],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\App.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\Signup.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\Template.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminTaskView.js",["213","214"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../CSS/mainstyle.module.css\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { TaskUser } from \"../Components/classes\";\r\n\r\nimport { AdminParticipantRowNav } from \"../Components/AdminParticipantRowNav\";\r\nimport { AdminParticipantRow } from \"../Components/AdminParticipantRow\";\r\nimport { AdminNav } from \"../Components/AdminNav\";\r\n\r\nconst AdminTaskView = (props) => {\r\n  const task = props.location.task;\r\n  const axios = require(\"axios\").default;\r\n  const url = `/api/userQueue/${task.taskID}`;\r\n  const [userList, setUserList] = useState([]);\r\n  const [userData, setUserData] = useState();\r\n  const [reload, setReload] = useState(true);\r\n\r\n  var logInfo;\r\n  var history = useHistory();\r\n  const loggedIn = localStorage.getItem(\"user\");\r\n  if (loggedIn) {\r\n    logInfo = JSON.parse(loggedIn);\r\n  } else {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchUserData() {\r\n      await axios.get(url).then((res) => {\r\n        setUserData(res.data);\r\n      });\r\n    }\r\n    fetchUserData();\r\n  }, [reload, props]);\r\n\r\n  useEffect(() => {\r\n    if (!userData) return;\r\n    if (userData.length === 0) return;\r\n    var list = [];\r\n    for (let i = 0; i < userData.length; i++) {\r\n      var app;\r\n      if (!userData[i].Approval) {\r\n        app = null;\r\n      } else {\r\n        app = userData[i].Approval.data;\r\n      }\r\n      list.push(\r\n        new TaskUser(\r\n          userData[i].AccountID,\r\n          userData[i].Name,\r\n          userData[i].Role === \"Submitter\" ? \"제출자\" : \"평가자\",\r\n          userData[i].Gender.data == 0 ? \"남자\" : \"여자\",\r\n          userData[i].BirthDate.slice(0, 10),\r\n          userData[i].Score,\r\n          app\r\n        )\r\n      );\r\n    }\r\n    setUserList(list);\r\n  }, [userData]);\r\n\r\n  return (\r\n    <div>\r\n      <AdminNav\r\n        userType={\"관리자\"}\r\n        name={logInfo.name}\r\n        userID={logInfo.userID}\r\n      />\r\n      <div className={styles.center_all}>\r\n        <div className={styles.main_container}>\r\n          <div className={styles.sub_container_a}>\r\n            <div className={styles.row_container}>\r\n              <div>\r\n                <h2>태스크 이름</h2>\r\n                <p>{task.name}</p>\r\n              </div>\r\n              <div>\r\n                <h2>설명</h2>\r\n                <p>{task.desc}</p>\r\n              </div>\r\n            </div>\r\n            <div className={styles.row_container}>\r\n              <div>\r\n                <h2>제출 주기</h2>\r\n                <p>{task.period}</p>\r\n              </div>\r\n              <div>\r\n                <h2>패스 기준</h2>\r\n                <p>7</p>\r\n              </div>\r\n            </div>\r\n            <div className={styles.row_container}>\r\n              <div>\r\n                <h2>총 제출 수</h2>\r\n                <div className={styles.scrollable_div}>\r\n                  <table>\r\n                    <tr>\r\n                      <th>원본타입이름</th>\r\n                      <th>제출 수</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>원본타입1</td>\r\n                      <td>10</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>원본타입2</td>\r\n                      <td>90</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>총</td>\r\n                      <td>100</td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n              <div>\r\n                <h2>저장된 튜플 수</h2>\r\n                <div className={styles.scrollable_div}>\r\n                  <table>\r\n                    <tr>\r\n                      <th>원본타입이름</th>\r\n                      <th>저장 수</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>원본타입1</td>\r\n                      <td>10</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>원본타입2</td>\r\n                      <td>90</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>총</td>\r\n                      <td>100</td>\r\n                    </tr>\r\n                  </table>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={styles.button_container}>\r\n              <button className={`${styles.add_btn} ${styles.button_row}`}>\r\n                다운로드\r\n              </button>\r\n              <button\r\n                className={`${styles.add_btn} ${styles.button_row}`}\r\n                onClick={() => history.push(\"/\")}\r\n              >\r\n                닫기\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.main_container}>\r\n          <div className={styles.sub_container_b}>\r\n            <AdminParticipantRowNav />\r\n            <div className={styles.scrollable_div} style={{ height: \"100px\" }}>\r\n              {userList.map((user) => (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/UserDetail/${user.AccountID}`,\r\n                    user: user,\r\n                    taskID: task.taskID,\r\n                    newProps: props,\r\n                  }}\r\n                >\r\n                  <AdminParticipantRow\r\n                    user={user}\r\n                    taskID={task.taskID}\r\n                    setReload={setReload}\r\n                    reload={reload}\r\n                  />\r\n                </Link>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTaskView;\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminUserMng.js",["215","216"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AdminNav } from \"../Components/AdminNav\";\r\nimport { AdminUserRowNav } from \"../Components/AdminUserRowNav\";\r\nimport { AdminUserRow } from \"../Components/AdminUserRow\";\r\nimport styles from \"../CSS/mainstyle.module.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { AdminUser } from \"../Components/classes\";\r\nimport { Loading } from \"../Components/Loading\";\r\n\r\nconst AdminUserMng = () => {\r\n  var logInfo;\r\n  var history = useHistory();\r\n  const axios = require(\"axios\").default;\r\n  const [data, setData] = useState();\r\n  const [userList, setUserList] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n  const [url, setURL] = useState(\"/api/userList\");\r\n  const [taskInfo, setTaskInfo] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const loggedIn = localStorage.getItem(\"user\");\r\n\r\n  if (loggedIn) {\r\n    logInfo = JSON.parse(loggedIn);\r\n  } else {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const Search = () => {\r\n    var source = document.getElementById(\"sources\");\r\n    var value = source.value;\r\n    var input;\r\n    if (value === \"task\") {\r\n      if (!userList) return;\r\n      if (!value) return;\r\n      var newList = [];\r\n      for (let i = 0; i < userList.length; i++) {\r\n        if (userList[i].task.includes(text)) {\r\n          newList.push(userList[i]);\r\n        }\r\n      }\r\n      setUserList(newList);\r\n    } else if (value === \"BirthDate\") {\r\n      input = calculateYear(text);\r\n      setURL(`api/userList/${value}&${input}`);\r\n    } else if (value === \"Gender\") {\r\n      input = text === \"남자\" ? 0 : 1;\r\n      setURL(`api//${value}=${input}`);\r\n    } else {\r\n      if (value === \"Role\") {\r\n        input = text === \"제출자\" ? \"Submitter\" : \"Estimator\";\r\n      } else {\r\n        input = text;\r\n      }\r\n      setURL(`api/userList/${value}=\"${input}\"`);\r\n    }\r\n  };\r\n\r\n  const calculateAge = (year) => {\r\n    return 2020 - parseInt(year);\r\n  };\r\n\r\n  const calculateYear = (age) => {\r\n    return 2020 - parseInt(age);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    async function fetchData() {\r\n      await axios.get(url).then((res) => {\r\n        setData(res.data);\r\n      });\r\n      await axios.get(\"/api/userTask\").then((res) => {\r\n        setTaskInfo(res.data);\r\n      });\r\n    }\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    if (!taskInfo) return;\r\n    var list = [];\r\n    for (var i = 0; i < data.length; i++) {\r\n      var task = [];\r\n      for (var j = 0; j < taskInfo.length; j++) {\r\n        if (taskInfo[j].AppliedSubmitterID === data[i].AccountID) {\r\n          task.push(taskInfo[j].Name);\r\n        }\r\n      }\r\n      list.push(\r\n        new AdminUser(\r\n          data[i].AccountID,\r\n          data[i].Name,\r\n          data[i].Role === \"Submitter\" ? \"제출자\" : \"평가자\",\r\n          calculateAge(data[i].BirthDate.slice(0, 4)),\r\n          data[i].Gender.data == 0 ? \"남자\" : \"여자\",\r\n          data[i].UserID,\r\n          task\r\n        )\r\n      );\r\n    }\r\n    setUserList(list);\r\n    setLoading(false);\r\n  }, [data, taskInfo]);\r\n\r\n  return (\r\n    <div>\r\n      <AdminNav\r\n        userType={\"관리자\"}\r\n        name={logInfo.name}\r\n        userID={logInfo.userID}\r\n      />\r\n      <div className={styles.center_all}>\r\n        {loading && <Loading />}\r\n        <h2 className={styles.list_title}>회원 목록</h2>\r\n        <div className={styles.main_container}>\r\n          <div className={styles.sub_container_1}>\r\n            <AdminUserRowNav />\r\n            <div className={styles.scrollable_div} style={{ height: \"540px\" }}>\r\n              {userList.map((user) => (\r\n                <AdminUserRow user={user} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className={styles.last_row}>\r\n          <div>\r\n            <select\r\n              name=\"sources\"\r\n              id=\"sources\"\r\n              className={`${styles.custom_select} ${styles.sources}`}\r\n              placeholder=\"검색 옵션: \"\r\n            >\r\n              <option value=\"0\">검색 옵션:</option>\r\n              <option value=\"Name\">이름</option>\r\n              <option value=\"Role\">역할</option>\r\n              <option value=\"BirthDate\">나이</option>\r\n              <option value=\"Gender\">성별</option>\r\n              <option value=\"UserID\">ID</option>\r\n              <option value=\"task\">참여태스크</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <IconButton onClick={() => Search()}>\r\n              <SearchIcon className={styles.search_button} />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminUserMng;\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminAddTask.js",["217","218"],"import React, { useEffect, useState } from \"react\";\r\nimport styles from \"../CSS/mainstyle.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NewTask } from \"../Components/classes\";\r\n\r\nimport { AdminNav } from \"../Components/AdminNav\";\r\nimport { CreateTaskFirst } from \"../Components/CreateTaskFirst\";\r\nimport { CreateTaskTwo } from \"../Components/CreateTaskTwo\";\r\nimport { CreateTaskThree } from \"../Components/CreateTaskThree\";\r\n\r\nconst AdminAddTask = () => {\r\n  const [step, setStep] = useState(1);\r\n  const [newTask, setNewTask] = useState(new NewTask());\r\n  console.log(newTask.RDTSchema);\r\n  var logInfo;\r\n  var history = useHistory();\r\n  const loggedIn = localStorage.getItem(\"user\");\r\n  if (loggedIn) {\r\n    logInfo = JSON.parse(loggedIn);\r\n  } else {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    newTask.RDTSchema = [];\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <AdminNav\r\n        userType={\"관리자\"}\r\n        name={logInfo.name}\r\n        userID={logInfo.userID}\r\n      />\r\n      <div className={styles.center_all}>\r\n        <div className={styles.main_container}>\r\n          {step === 1 && (\r\n            <CreateTaskFirst setStep={setStep} newTask={newTask} />\r\n          )}\r\n          {step === 2 && <CreateTaskTwo setStep={setStep} newTask={newTask} />}\r\n          {step === 3 && (\r\n            <CreateTaskThree setStep={setStep} newTask={newTask} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminAddTask;\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminTaskEdit.js",["219"],"import React, { useState } from \"react\";\r\nimport styles from \"../CSS/mainstyle.module.css\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport RemoveCircleIcon from \"@material-ui/icons/RemoveCircle\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Pair } from \"../Components/classes\";\r\nimport { RSC } from \"../Components/classes\";\r\nimport { Schema } from \"../Components/Schema\";\r\nimport { AdminNav } from \"../Components/AdminNav\";\r\n\r\nconst AdminTaskEdit = (props) => {\r\n  const axios = require(\"axios\").default;\r\n  const url = \"/api/AdminTask/SetScore\";\r\n  const task = props.location.task;\r\n  const [newPassScore, setNewPassScore] = useState(task.passScore);\r\n  const [toggleAdd, setToggleAdd] = useState(false);\r\n  const [name, setName] = useState();\r\n  const [num, setNum] = useState(2);\r\n  const [row, setRow] = useState([1]);\r\n  const [pairList, setPairList] = useState([new Pair()]);\r\n\r\n  var logInfo;\r\n  var history = useHistory();\r\n  const loggedIn = localStorage.getItem(\"user\");\r\n  if (loggedIn) {\r\n    logInfo = JSON.parse(loggedIn);\r\n  } else {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  const saveScore = async () => {\r\n    await axios.post(url, {\r\n      taskID: task.taskID,\r\n      newValue: newPassScore,\r\n    });\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleRemove = () => {\r\n    if (num === 2) {\r\n      return;\r\n    }\r\n    setNum(num - 1);\r\n    setRow(row.filter((item) => item !== num - 1));\r\n    setPairList(pairList.slice(0, -1));\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    if (name === \"\" || name === undefined || name === null) {\r\n      setToggleAdd(!toggleAdd);\r\n    } else {\r\n      var finalList = [];\r\n      for (var i = 0; i < pairList.length; i++) {\r\n        if (pairList[i].name !== undefined && pairList[i].type !== undefined) {\r\n          finalList.push(pairList[i]);\r\n        }\r\n      }\r\n      var RDT = new RSC(name, finalList);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AdminNav\r\n        userType={\"관리자\"}\r\n        name={logInfo.name}\r\n        userID={logInfo.userID}\r\n      />\r\n      <div className={styles.center_all}>\r\n        <div className={styles.main_container}>\r\n          {!toggleAdd && (\r\n            <div className={styles.sub_container_1}>\r\n              <div className={styles.ca}>\r\n                <form noValidate autoComplete=\"off\">\r\n                  <div className={styles.nbc}>\r\n                    <TextField\r\n                      className={styles.name_box}\r\n                      id=\"name\"\r\n                      label=\"태스크 이름\"\r\n                      defaultValue={task.name}\r\n                      InputProps={{\r\n                        readOnly: true,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className={styles.nbc}>\r\n                    <TextField\r\n                      className={styles.name_box}\r\n                      id=\"pass_score\"\r\n                      label=\"패스 기준 점수\"\r\n                      defaultValue={task.PassScore}\r\n                      value={newPassScore}\r\n                      type=\"number\"\r\n                      shrink\r\n                      onChange={(e) => {\r\n                        if (e.target.value < 0) {\r\n                          setNewPassScore(0);\r\n                        } else if (e.target.value > 10) {\r\n                          setNewPassScore(10);\r\n                        } else {\r\n                          setNewPassScore(e.target.value);\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </form>\r\n                <div className={styles.button_container}>\r\n                  <button\r\n                    className={`${styles.add_btn} ${styles.button_row}`}\r\n                    onClick={() => setToggleAdd(!toggleAdd)}\r\n                  >\r\n                    원본데이터타입 추가\r\n                  </button>\r\n                  <button\r\n                    className={`${styles.add_btn} ${styles.button_row}`}\r\n                    onClick={() => saveScore()}\r\n                  >\r\n                    완료\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          {toggleAdd && (\r\n            <div className={`${styles.sub_container_a} ${styles.ninety}`}>\r\n              <div className={styles.title}>\r\n                <h1>원본데이터타입 스키마 설정</h1>\r\n              </div>\r\n              <form noValidate autoComplete=\"off\">\r\n                <div>\r\n                  <TextField\r\n                    className={styles.input_box}\r\n                    id=\"name\"\r\n                    label=\"원본데이터타입 이름\"\r\n                    placeholder=\"원본데이터 타입 이름을 입력하시오.\"\r\n                    value={name}\r\n                    onChange={(e) => setName(e.target.value)}\r\n                  />\r\n                </div>\r\n                <div className={`${styles.scrollable_div} ${styles.new_box}`}>\r\n                  {row.map((item) => (\r\n                    <Schema key={item} pair={pairList[item - 1]} />\r\n                  ))}\r\n                </div>\r\n              </form>\r\n              <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    handleRemove();\r\n                  }}\r\n                >\r\n                  <RemoveCircleIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  onClick={() => {\r\n                    setPairList([...pairList, new Pair()]);\r\n                    setNum(num + 1);\r\n                    setRow([...row, num]);\r\n                  }}\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n              </div>\r\n              <div className={styles.button_container}>\r\n                <button\r\n                  className={`${styles.add_btn} ${styles.button_row}`}\r\n                  onClick={() => handleComplete()}\r\n                >\r\n                  완료\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTaskEdit;\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\SubmitterTaskView.js",["220"],"import React, { useState } from \"react\";\r\nimport styles from \"../CSS/mainstyle.module.css\";\r\n\r\nimport { SubmitterTaskRowNav } from \"../Components/SubmitterTaskRowNav\";\r\nimport { SubmitterTaskRow } from \"../Components/SubmitterTaskRow\";\r\nimport { SubmitterSubmit } from \"../Components/SubmitterSubmit\";\r\nimport { Nav } from \"../Components/Nav\";\r\n\r\nexport const SubmitterTaskView = ({\r\n  taskID,\r\n  taskName,\r\n  taskDesc,\r\n  taskDate,\r\n  taskNum,\r\n }) => {\r\n\r\n  var logInfo;\r\n  const loggedIn = localStorage.getItem(\"user\");\r\n  console.log(loggedIn);\r\n  if (loggedIn) {\r\n    logInfo = JSON.parse(loggedIn);\r\n  }\r\n\r\n  const [togglePopUp, setTogglePopUp] = useState(false);\r\n  const Submit = () => {\r\n    // Get Information About Chosen Task\r\n    setTogglePopUp(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.center_all}>\r\n      <Nav\r\n        userType={loggedIn.userType}\r\n        name={loggedIn.userName}\r\n        userID={loggedIn.userID}\r\n      />\r\n      <h2 className={styles.list_title}>파일 목록</h2>\r\n      <div className={styles.main_container}>\r\n        <div className={styles.sub_container_1}>\r\n          <SubmitterTaskRowNav />\r\n          <div className={styles.scrollable_div}>\r\n            <SubmitterTaskRow\r\n              fileName=\"코로나.csv\"\r\n              fileScore=\"86\"\r\n              fileType=\"국내 확진자 Type\"\r\n              fileDate=\"20/11/25\"\r\n              filePNP=\"P\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button className={styles.add_btn} onClick={() => Submit()}>\r\n            제출하기\r\n      </button>\r\n      {togglePopUp && (\r\n      <SubmitterSubmit\r\n        setTogglePopUp={setTogglePopUp}\r\n        taskID={taskID}\r\n        taskDesc={taskDesc}\r\n      />)\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\EditUserInfo.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\UserDetail.js",["221","222","223","224"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../CSS/mainstyle.module.css\";\r\n\r\nimport { UDE } from \"../Components/classes\";\r\nimport { UDS } from \"../Components/classes\";\r\nimport { AdminNav } from \"../Components/AdminNav\";\r\nimport { UserDetailEstimatorNav } from \"../Components/UserDetailEstimatorNav\";\r\nimport { UserDetailEstimator } from \"../Components/UserDetailEstimator\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { UserDetailSubmitterNav } from \"../Components/UserDetailSubmitterNav\";\r\nimport { UserDetailSubmitter } from \"../Components/UserDetailSubmitter\";\r\nimport { Loading } from \"../Components/Loading\";\r\n\r\nconst UserDetail = (props) => {\r\n  const user = props.location.user;\r\n  const taskID = props.location.taskID;\r\n  const newProps = props.location.newProps;\r\n  const axios = require(\"axios\").default;\r\n  const [udeList, setUdeList] = useState([]);\r\n  const [udsList, setUdsList] = useState([]);\r\n  const [mainData, setMainData] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [content, setContent] = useState([]);\r\n\r\n  var logInfo;\r\n  var history = useHistory();\r\n  const loggedIn = localStorage.getItem(\"user\");\r\n  if (loggedIn) {\r\n    logInfo = JSON.parse(loggedIn);\r\n  } else {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchMain = async () => {\r\n      await axios\r\n        .get(`/api/UserDetail/main/${user.type}/${user.accountID}`)\r\n        .then((res) => {\r\n          setMainData(res.data[0]);\r\n        });\r\n    };\r\n    const fetchContent = async () => {\r\n      await axios\r\n        .get(`/api/UserDetail/content/${user.type}/${user.accountID}`)\r\n        .then((res) => {\r\n          setContent(res.data);\r\n        });\r\n    };\r\n    setLoading(true);\r\n    fetchMain();\r\n    fetchContent();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!mainData) return;\r\n    if (!content) return;\r\n    if (user.type === \"평가자\") {\r\n      var list = [];\r\n      for (var i = 0; i < content.length; i++) {\r\n        list.push(\r\n          new UDE(\r\n            content[i].PDSFID,\r\n            content[i].TotalTupleNum,\r\n            content[i].DupTupleNum,\r\n            content[i].NullRatio,\r\n            content[i].Direc,\r\n            content[i].Score\r\n          )\r\n        );\r\n      }\r\n      setUdeList(list);\r\n    }\r\n    setLoading(false);\r\n  }, [mainData, content]);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <AdminNav\r\n          userType={logInfo.userType}\r\n          name={logInfo.name}\r\n          userID={logInfo.userID}\r\n        />\r\n        {loading && <Loading />}\r\n        {!loading && (\r\n          <div className={styles.center_all}>\r\n            <div className={styles.main_container}>\r\n              {user.type === \"제출자\" && (\r\n                <div className={styles.mc}>\r\n                  <div className={styles.etr}>\r\n                    <div>\r\n                      <h2>이름</h2>\r\n                      <p>{user.name}</p>\r\n                    </div>\r\n                    <div>\r\n                      <h2>참여태스크수</h2>\r\n                      <p>{mainData.Part_Num}</p>\r\n                    </div>\r\n                    <div>\r\n                      <h2>총제출수</h2>\r\n                      <p>{mainData.Total_Sub}</p>\r\n                    </div>\r\n                    <div>\r\n                      <h2>점수</h2>\r\n                      <p>{mainData.Score}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className={styles.ec}>\r\n                    <UserDetailSubmitterNav />\r\n                    <div\r\n                      className={styles.scrollable_div}\r\n                      style={{ height: \"300px\" }}\r\n                    >\r\n                      {udsList.map((item) => {\r\n                        return (\r\n                          <UserDetailSubmitter top={item.task} uds={item} />\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {user.type === \"평가자\" && (\r\n                <div className={styles.mc}>\r\n                  <div className={styles.etr}>\r\n                    <div>\r\n                      <h2>이름</h2>\r\n                      <p>{mainData.Name}</p>\r\n                    </div>\r\n                    <div>\r\n                      <h2>총 평가파일 수</h2>\r\n                      <p>{mainData.Total_File}</p>\r\n                    </div>\r\n                    <div>\r\n                      <h2>평가 대기파일 수</h2>\r\n                      <p>{mainData.Total_Queue}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className={styles.ec}>\r\n                    <UserDetailEstimatorNav />\r\n                    <div\r\n                      className={styles.scrollable_div}\r\n                      style={{ height: \"300px\" }}\r\n                    >\r\n                      {udeList.map((item) => {\r\n                        return <UserDetailEstimator ude={item} />;\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              {newProps && (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/TaskView/${taskID}`,\r\n                    task: newProps.location.task,\r\n                  }}\r\n                >\r\n                  <button className={styles.add_btn} style={{ margin: \"10px\" }}>\r\n                    닫기\r\n                  </button>\r\n                </Link>\r\n              )}\r\n              {!newProps && (\r\n                <Link\r\n                  to={{\r\n                    pathname: \"/user\",\r\n                  }}\r\n                >\r\n                  <button className={styles.add_btn} style={{ margin: \"10px\" }}>\r\n                    닫기\r\n                  </button>\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDetail;\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\AdminMain.js",["225"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styles from \"../CSS/mainstyle.module.css\";\r\n\r\nimport { AdminTask } from \"../Components/classes\";\r\nimport { Loading } from \"../Components/Loading\";\r\nimport { AdminTaskRowNav } from \"../Components/AdminTaskRowNav\";\r\nimport { AdminTaskRow } from \"../Components/AdminTaskRow\";\r\n\r\nexport const AdminMain = () => {\r\n  const axios = require(\"axios\").default;\r\n  const [data, setData] = useState();\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const url = \"/api/AdminTask\";\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await axios.get(url).then((res) => {\r\n        setData(res.data);\r\n      });\r\n    }\r\n    setLoading(true);\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    var list = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      list.push(\r\n        new AdminTask(\r\n          data[i].TaskID,\r\n          data[i].Name,\r\n          data[i].Description,\r\n          data[i].Period,\r\n          data[i].PassScore\r\n        )\r\n      );\r\n    }\r\n    setTaskList(list);\r\n    setLoading(false);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className={styles.center_all}>\r\n      {loading && <Loading />}\r\n      <h2 className={styles.list_title}>태스크 목록</h2>\r\n      <div className={styles.main_container}>\r\n        <div className={styles.sub_container_1}>\r\n          <AdminTaskRowNav />\r\n          <div className={styles.scrollable_div} style={{ height: \"540px\" }}>\r\n            {taskList.map((task) => (\r\n              <AdminTaskRow key={task.TaskID} task={task} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Link to={{ pathname: \"/NewTask\" }}>\r\n        <button className={styles.add_btn}>태스크 추가</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\SubmitterMain.js",["226","227","228","229"],"import React from \"react\";\r\nimport styles from \"../CSS/mainstyle.module.css\";\r\n\r\nimport { SubmitterTopRow1 } from \"../Components/SubmitterTopRow1\";\r\nimport { SubmitterTopRow2 } from \"../Components/SubmitterTopRow2\";\r\nimport { SubmitterJoined } from \"../Components/SubmitterJoined\";\r\nimport { SubmitterNew } from \"../Components/SubmitterNew\";\r\nimport { SubmitterWaiting } from \"../Components/SubmitterWaiting\";\r\n\r\n\r\nexport const SubmitterMain = () => {\r\n  var Joined = [];\r\n  var New = [];\r\n  var Waiting = [];\r\n\r\n  const LoadTasks = (Joined, New, Waiting) => {\r\n    // function to initially load tasks to lists;\r\n  };\r\n\r\n  return (\r\n    <div className={styles.center_all}>\r\n      <h2 className={styles.list_title}>태스크 현황</h2>\r\n      <div className={styles.main_container}>\r\n        <div className={styles.sub_container_2}>\r\n          <SubmitterTopRow1 />\r\n          <div className={styles.scrollable_div}>\r\n            <SubmitterJoined\r\n              taskID=\"1\"\r\n              taskName=\"태스크1\"\r\n              taskDesc=\"코로나 확진자 중 서울 거주자 데이터\"\r\n              taskDate=\"20/11/15\"\r\n              taskNum=\"2\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles.sub_container_2} style={{ marginTop: 0 }}>\r\n          <SubmitterTopRow2/>\r\n          <div className={styles.scrollable_div}>\r\n            <SubmitterNew\r\n              taskName=\"태스크2\"\r\n              taskDesc=\"코로나 확진자 중 외국인 데이터\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles.sub_container_2} style={{ marginTop: 0 }}>\r\n          <SubmitterTopRow2/>\r\n          <div className={styles.scrollable_div}>\r\n            <SubmitterWaiting\r\n              taskName=\"태스크3\"\r\n              taskDesc=\"코로나 확진자 다른 데이터\"\r\n            />\r\n          </div>\r\n        </div>\r\n      \r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n            \r\n            ","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\View\\EstimatorMain.js",["230"],"import React from \"react\";\r\nimport styles from \"../CSS/mainstyle.module.css\";\r\nimport { Record } from \"../Components/classes\";\r\nimport { QT } from \"../Components/classes\";\r\n\r\nimport { EstimatorTopRow } from \"../Components/EstimatorTopRow\";\r\nimport { EstimateUnfinished } from \"../Components/EstimateUnfinished\";\r\nimport { EstimateFinished } from \"../Components/EstimateFinished\";\r\n\r\nexport const EstimatorMain = ({ loginfo }) => {\r\n  const testRecord = new Record(\r\n    1,\r\n    \"임시이름\",\r\n    \"임시 타입\",\r\n    \"둘리\",\r\n    1,\r\n    new QT(100, 10, 0.4),\r\n    null,\r\n    \"/\"\r\n  );\r\n\r\n  var unfinished = [];\r\n  var finished = [];\r\n  unfinished.push(testRecord);\r\n  unfinished.push(testRecord);\r\n  unfinished.push(testRecord);\r\n  finished.push(testRecord);\r\n  finished.push(testRecord);\r\n  finished.push(testRecord);\r\n\r\n  const LoadTasks = (unfinished, finished) => {\r\n    /*  function to initially load tasks to lists\r\n        userID is in \"loginfo.userID\"\r\n    */\r\n  };\r\n\r\n  return (\r\n    <div className={styles.center_all}>\r\n      <h2 className={styles.list_title}>평가 현황</h2>\r\n      <div className={styles.main_container}>\r\n        <div className={styles.sub_container_2}>\r\n          <EstimatorTopRow />\r\n          <div className={styles.scrollable_div}>\r\n            {unfinished.map((record) => (\r\n              <EstimateUnfinished record={record} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <div className={styles.sub_container_2} style={{ marginTop: 0 }}>\r\n          <EstimatorTopRow />\r\n          <div className={styles.scrollable_div}>\r\n            {finished.map((record) => (\r\n              <EstimateFinished record={record} />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Login.js",["231","232","233","234"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../CSS/loginstyle.module.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport logo from \"../Images/로고.png\";\r\nimport { User } from \"./classes\";\r\n\r\nexport const Login = () => {\r\n  const [id, setID] = useState(\"\");\r\n  const [pw, setPW] = useState(\"\");\r\n  const axios = require(\"axios\");\r\n  var type = {\r\n    Submitter: \"제출자\",\r\n    Administrator: \"관리자\",\r\n    Estimator: \"평가자\",\r\n  };\r\n  var history = useHistory();\r\n  const [data, setData] = useState();\r\n\r\n  const handleLogin = async () => {\r\n    const url = \"/api/loginAuth\";\r\n    const res = await axios.get(url + `/${id}&${pw}`).catch((err) => {\r\n      if (err.response) {\r\n        console.log(err.responsse);\r\n      } else if (err.request) {\r\n        console.log(\"never recieved a response\");\r\n      }\r\n    });\r\n    if (res && res.data) setData(res);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      return;\r\n    }\r\n    if (data.data.length == 0) {\r\n      alert(\"아이디와 비밀번호를 확인해주세요.\");\r\n      return;\r\n    }\r\n    let loginInfo = new User(\r\n      data.data[0].AccountID,\r\n      data.data[0].UserID,\r\n      type[data.data[0].Role],\r\n      data.data[0].Name,\r\n      data.data[0].Gender.data,\r\n      data.data[0].Address,\r\n      data.data[0].BirthDate,\r\n      data.data[0].Phone\r\n    );\r\n    localStorage.setItem(`user`, JSON.stringify(loginInfo));\r\n    history.push(\"/\");\r\n  }, [data]);\r\n\r\n  return (\r\n    <div className={styles.main_container}>\r\n      <div className={styles.div_signin}>\r\n        <img className={styles.main_logo} src={logo} alt=\"메인 로고\" />\r\n        <p className={`${styles.notice} ${styles.login_p}`}>로그인 하세요</p>\r\n        <input\r\n          type=\"email\"\r\n          id=\"inputEmail\"\r\n          className={styles.div_input}\r\n          placeholder=\"User ID\"\r\n          value={id}\r\n          onChange={(e) => setID(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          id=\"inputPassword\"\r\n          className={styles.div_input}\r\n          placeholder=\"Password\"\r\n          value={pw}\r\n          onChange={(e) => setPW(e.target.value)}\r\n        />\r\n        <br />\r\n        <button\r\n          className={styles.button}\r\n          type=\"submit\"\r\n          onClick={() => handleLogin()}\r\n        >\r\n          로그인\r\n        </button>\r\n        <br />\r\n        <a\r\n          href=\"\"\r\n          id={styles.div_signup}\r\n          className={styles.login_a}\r\n          href=\"./signup\"\r\n        >\r\n          회원가입\r\n        </a>\r\n        <p className={`${styles.copyright} ${styles.login_p}`}>\r\n          &copy; 연세대학교 데이터베이스 14팀\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Nav.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\classes.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminNav.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Loading.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminParticipantRow.js",["235","236"],"import React from \"react\";\r\nimport styles from \"../CSS/component.module.css\";\r\n\r\nexport const AdminParticipantRow = ({ reload, user, taskID, setReload }) => {\r\n  const axios = require(\"axios\").default;\r\n  const Admit = async (admit) => {\r\n    await axios\r\n      .post(\"/api/userQueue/Admit\", {\r\n        AccountID: user.AccountID,\r\n        newValue: admit,\r\n        targetTaskID: taskID,\r\n      })\r\n      .then((res) => console.log(res));\r\n    setReload(!reload);\r\n  };\r\n  return (\r\n    <div className={styles.row_container}>\r\n      <p>{user.name}</p>\r\n      <p>{user.sex}</p>\r\n      <p>{user.birth}</p>\r\n      <p>{user.score}</p>\r\n      {user.admit == 1 && <p>수락됨</p>}\r\n      {user.admit == 0 && <p>거절됨</p>}\r\n      {!user.admit && (\r\n        <div className={styles.btn_row}>\r\n          <button onClick={() => Admit(1)}>승인</button>\r\n          <button onClick={() => Admit(0)}>거절</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminUserRow.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminParticipantRowNav.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminUserRowNav.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\CreateTaskFirst.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterTaskRowNav.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\CreateTaskThree.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterTaskRow.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterSubmit.js",["237","238","239"],"import React, { useState, Component } from \"react\";\r\nimport styles from \"../CSS/component.module.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nimport Select from 'react-select';\r\n\r\nexport const SubmitterSubmit = ({\r\n  taskName,\r\n  taskDesc,\r\n  setTogglePopUp,\r\n}) => {\r\n  const RDTtypes = [\r\n    { value : \"type1\", label : \"type1\"},\r\n    { value : \"type2\", label : \"type2\"},\r\n    { value : \"type3\", label : \"type3\"},\r\n  ];\r\n\r\n  const [highlighted, setHighlighted] = React.useState(false);\r\n\r\n  const Upload = () => {\r\n    // process uploading\r\n    setTogglePopUp(false);\r\n  };\r\n  return (\r\n    <div className={styles.popup_sub}>      \r\n      <IconButton\r\n        className={styles.close_btn}\r\n        style={{ position: \"absolute\" }}\r\n        onClick={() => setTogglePopUp(false)}\r\n      >\r\n        <CloseIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <div className={styles.info}>\r\n        <h3>태스크 이름</h3>\r\n        <p>{taskName}</p>\r\n      </div>\r\n      <div className={styles.info}>\r\n        <h3>태스크 정보</h3>\r\n        <p>{taskDesc}</p>\r\n      </div>\r\n\r\n      <h3>파일 업로드</h3>\r\n      <div className={`${styles.file_input} ${\r\n        highlighted ? `${styles.border_blue}` : `${styles.border_black}`}`}\r\n        onDragEnter={() => {\r\n          setHighlighted(true);\r\n        }}\r\n        onDragLeave={() => {\r\n          setHighlighted(false);\r\n        }}\r\n\r\n        onDragOver={(e) => {\r\n          e.preventDefault();\r\n        }}\r\n        onDrop={(e) => {\r\n          e.preventDefault();\r\n          setHighlighted(false);\r\n\r\n          Array.from(e.dataTransfer.files)\r\n            .forEach((file) => {\r\n              const text = file;\r\n            });\r\n        }}\r\n      >\r\n        제출할 파일을 끌어다 놓으시오.\r\n      </div>\r\n\r\n      <div className={styles.info}>\r\n      <h3>Row Data Type</h3>\r\n\r\n        <Select  \r\n          options={RDTtypes}\r\n          placeholder=\"Raw Data Type을 선택하시오.\"\r\n          className = {styles.select_rdt}\r\n          isSearchable\r\n        />\r\n      </div>\r\n\r\n      <button className={styles.complete_btn} onClick={() => Upload()}>\r\n        제출\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\UserDetailEstimatorNav.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Modal.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\UserDetailSubmitterNav.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\UserDetailSubmitter.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\UserDetailEstimator.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\Schema.js",["240"],"import React, { useState, useEffect } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nexport const Schema = ({ pair, raw, tdt }) => {\r\n  const dataType = [\r\n    \"bit\",\r\n    \"tinyint\",\r\n    \"smallint\",\r\n    \"int\",\r\n    \"bigint\",\r\n    \"decimal\",\r\n    \"numeric\",\r\n    \"float\",\r\n    \"real\",\r\n    \"date\",\r\n    \"time\",\r\n    \"datetime\",\r\n    \"timestamp\",\r\n    \"year\",\r\n    \"char\",\r\n    \"varchar\",\r\n    \"text\",\r\n    \"nchar\",\r\n    \"nvarchar\",\r\n    \"ntext\",\r\n    \"binary\",\r\n    \"varbinary\",\r\n    \"image\",\r\n    \"clob\",\r\n    \"bclob\",\r\n    \"xml\",\r\n    \"json\",\r\n  ];\r\n  const maxList = [\"varbinary\", \"nvarchar\", \"varchar\"];\r\n  const [toggleMax, setToggleMax] = useState(false);\r\n  const [type, setType] = useState(\"\");\r\n  const [maxLength, setMaxLength] = useState(\"\");\r\n  const [map, setMap] = useState(\"\");\r\n\r\n  return (\r\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n      <div>\r\n        <TextField\r\n          style={{ minWidth: \"200px\", marginRight: \"10px\" }}\r\n          id=\"name\"\r\n          label=\"속성 이름\"\r\n          placeholder=\"속성 이름을 입력하시오.\"\r\n          value={pair.name}\r\n          onChange={(e) => {\r\n            pair.name = e.target.value;\r\n          }}\r\n        />\r\n      </div>\r\n      <div>\r\n        <FormControl style={{ minWidth: \"200px\", marginRight: \"10px\" }}>\r\n          <InputLabel>속성타입</InputLabel>\r\n          <Select\r\n            id=\"type\"\r\n            value={type}\r\n            onChange={(e) => {\r\n              if (maxList.includes(e.target.value)) {\r\n                setToggleMax(true);\r\n              } else {\r\n                setToggleMax(false);\r\n              }\r\n              setType(e.target.value);\r\n              pair.type = e.target.value;\r\n            }}\r\n          >\r\n            {dataType.map((type) => {\r\n              return <MenuItem value={type}>{type}</MenuItem>;\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      {toggleMax && (\r\n        <div>\r\n          <TextField\r\n            style={{ minWidth: \"200px\", marginRight: \"10px\" }}\r\n            id=\"name\"\r\n            type=\"number\"\r\n            label=\"Max Length\"\r\n            placeholder=\"기본값=20\"\r\n            value={maxLength}\r\n            onChange={(e) => {\r\n              if (e.target.value > 65535 || e.target.value < 1) {\r\n                setMaxLength(20);\r\n                pair.maxLength = 20;\r\n              } else {\r\n                setMaxLength(e.target.value);\r\n                pair.maxLength = e.target.value;\r\n              }\r\n            }}\r\n          />\r\n        </div>\r\n      )}\r\n      {raw && (\r\n        <FormControl style={{ minWidth: \"200px\" }}>\r\n          <InputLabel>매핑속성</InputLabel>\r\n          <Select\r\n            id=\"type\"\r\n            value={map}\r\n            onChange={(e) => {\r\n              if (e.target.value) {\r\n                if (e.target.value.maxLength) {\r\n                  setToggleMax(true);\r\n                } else {\r\n                  setToggleMax(false);\r\n                }\r\n                setMap(e.target.value);\r\n                setMaxLength(e.target.value.maxLength);\r\n                setType(e.target.value.type);\r\n                pair.map = e.target.value.name;\r\n                pair.maxLength = e.target.value.maxLength;\r\n                pair.type = e.target.value.type;\r\n              } else {\r\n                pair.map = null;\r\n              }\r\n            }}\r\n          >\r\n            <MenuItem value={null}>null</MenuItem>\r\n            {tdt.map((pair) => {\r\n              return <MenuItem value={pair}>{pair.name}</MenuItem>;\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\CreateTaskTwo.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterTopRow1.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminTaskRowNav.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterWaiting.js",["241","242"],"import React, { useState } from \"react\";\r\nimport styles from \"../CSS/component.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SubmitterWaiting = ({\r\n  taskName,\r\n  taskDesc,\r\n}) => {\r\n  \r\n  return (\r\n    <div>\r\n      <div className={styles.row_container}>\r\n        <p>{taskName}</p>\r\n        <p>{taskDesc}</p>\r\n        <div>\r\n          <button className={styles.row_button}>\r\n            승인 대기중\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\AdminTaskRow.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterTopRow2.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterNew.js",["243","244"],"import React, { useState } from \"react\";\r\nimport styles from \"../CSS/component.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const SubmitterNew = ({\r\n  taskName,\r\n  taskDesc,\r\n}) => {\r\n  const Apply = () => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.row_container}>\r\n        <p>{taskName}</p>\r\n        <p>{taskDesc}</p>\r\n        <div>\r\n          <button className={styles.row_button} onClick={() => Apply()}>\r\n            참여신청\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\SubmitterJoined.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimatorTopRow.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimateFinished.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimateUnfinished.js",[],"C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimatorDetail.js",["245","246"],"import React, { useState, useEffect } from \"react\";\r\nimport styles from \"../CSS/component.module.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport styles2 from \"../CSS/mainstyle.module.css\";\r\n\r\nexport const EstimatorDetail = ({ record, setTogglePopUp }) => {\r\n  const download = (record) => {\r\n    console.log(record);\r\n  };\r\n  return (\r\n    <div className={styles.popup}>\r\n      <IconButton\r\n        className={styles.close_btn}\r\n        style={{ position: \"absolute\" }}\r\n        onClick={() => setTogglePopUp(false)}\r\n      >\r\n        <CloseIcon fontSize=\"large\" />\r\n      </IconButton>\r\n      <h3>태스크 이름</h3>\r\n      <p>{record.taskName}</p>\r\n      <h3>태스크 타입</h3>\r\n      <p>{record.taskType}</p>\r\n      <h3>제출자</h3>\r\n      <p>{record.submitter}</p>\r\n      <h3>회차</h3>\r\n      <p>{record.turn}</p>\r\n      <table className={styles.qualitative_test}>\r\n        <thead>\r\n          <tr>\r\n            <th>총 튜플 수</th>\r\n            <th>총 중복 튜플 수</th>\r\n            <th>Null Ratio</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <th>{record.qt.total_tup}</th>\r\n            <th>{record.qt.dup_tup}</th>\r\n            <th>{record.qt.null_ratio}</th>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <h3 style={{ textAlign: \"center\" }}>점수</h3>\r\n      <div className={styles.evaluate}>\r\n        <button disabled>-</button>\r\n        <input type=\"number\" value={record.score} disabled />\r\n        <button disabled>+</button>\r\n      </div>\r\n      <div className={styles2.button_container}>\r\n        <button\r\n          className={`${styles2.add_btn} ${styles2.button_row}`}\r\n          onClick={() => download(record)}\r\n        >\r\n          다운로드\r\n        </button>\r\n        <button\r\n          className={`${styles2.add_btn} ${styles2.button_row}`}\r\n          onClick={() => setTogglePopUp(false)}\r\n        >\r\n          완료\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\user\\Desktop\\1204\\Database2020\\client\\src\\Components\\EstimatorEstimate.js",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":34,"column":6,"nodeType":"253","endLine":34,"endColumn":21,"suggestions":"254"},{"ruleId":"255","severity":1,"message":"256","line":52,"column":35,"nodeType":"257","messageId":"258","endLine":52,"endColumn":37},{"ruleId":"251","severity":1,"message":"259","line":79,"column":6,"nodeType":"253","endLine":79,"endColumn":11,"suggestions":"260"},{"ruleId":"255","severity":1,"message":"256","line":98,"column":31,"nodeType":"257","messageId":"258","endLine":98,"endColumn":33},{"ruleId":"261","severity":1,"message":"262","line":13,"column":19,"nodeType":"263","messageId":"264","endLine":13,"endColumn":29},{"ruleId":"251","severity":1,"message":"265","line":26,"column":6,"nodeType":"253","endLine":26,"endColumn":8,"suggestions":"266"},{"ruleId":"261","severity":1,"message":"267","line":60,"column":11,"nodeType":"263","messageId":"264","endLine":60,"endColumn":14},{"ruleId":"261","severity":1,"message":"268","line":21,"column":5,"nodeType":"263","messageId":"264","endLine":21,"endColumn":12},{"ruleId":"261","severity":1,"message":"269","line":5,"column":10,"nodeType":"263","messageId":"264","endLine":5,"endColumn":13},{"ruleId":"261","severity":1,"message":"270","line":20,"column":19,"nodeType":"263","messageId":"264","endLine":20,"endColumn":29},{"ruleId":"251","severity":1,"message":"271","line":52,"column":6,"nodeType":"253","endLine":52,"endColumn":8,"suggestions":"272"},{"ruleId":"251","severity":1,"message":"273","line":74,"column":6,"nodeType":"253","endLine":74,"endColumn":25,"suggestions":"274"},{"ruleId":"251","severity":1,"message":"259","line":25,"column":6,"nodeType":"253","endLine":25,"endColumn":8,"suggestions":"275"},{"ruleId":"261","severity":1,"message":"276","line":12,"column":7,"nodeType":"263","messageId":"264","endLine":12,"endColumn":13},{"ruleId":"261","severity":1,"message":"277","line":13,"column":7,"nodeType":"263","messageId":"264","endLine":13,"endColumn":10},{"ruleId":"261","severity":1,"message":"278","line":14,"column":7,"nodeType":"263","messageId":"264","endLine":14,"endColumn":14},{"ruleId":"261","severity":1,"message":"279","line":16,"column":9,"nodeType":"263","messageId":"264","endLine":16,"endColumn":18},{"ruleId":"261","severity":1,"message":"279","line":31,"column":9,"nodeType":"263","messageId":"264","endLine":31,"endColumn":18},{"ruleId":"255","severity":1,"message":"256","line":35,"column":26,"nodeType":"257","messageId":"258","endLine":35,"endColumn":28},{"ruleId":"251","severity":1,"message":"280","line":51,"column":6,"nodeType":"253","endLine":51,"endColumn":12,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":83,"column":9,"nodeType":"284","endLine":88,"endColumn":10},{"ruleId":"285","severity":1,"message":"286","line":87,"column":11,"nodeType":"287","endLine":87,"endColumn":26},{"ruleId":"255","severity":1,"message":"256","line":22,"column":19,"nodeType":"257","messageId":"258","endLine":22,"endColumn":21},{"ruleId":"255","severity":1,"message":"256","line":23,"column":19,"nodeType":"257","messageId":"258","endLine":23,"endColumn":21},{"ruleId":"261","severity":1,"message":"288","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"289","line":1,"column":27,"nodeType":"263","messageId":"264","endLine":1,"endColumn":36},{"ruleId":"261","severity":1,"message":"290","line":62,"column":21,"nodeType":"263","messageId":"264","endLine":62,"endColumn":25},{"ruleId":"261","severity":1,"message":"291","line":1,"column":27,"nodeType":"263","messageId":"264","endLine":1,"endColumn":36},{"ruleId":"261","severity":1,"message":"288","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"292","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":14},{"ruleId":"261","severity":1,"message":"288","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"292","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":14},{"ruleId":"261","severity":1,"message":"288","line":1,"column":17,"nodeType":"263","messageId":"264","endLine":1,"endColumn":25},{"ruleId":"261","severity":1,"message":"291","line":1,"column":27,"nodeType":"263","messageId":"264","endLine":1,"endColumn":36},"no-native-reassign",["293"],"no-negated-in-lhs",["294"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'axios' and 'url'. Either include them or remove the dependency array.","ArrayExpression",["295"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'axios'. Either include it or remove the dependency array.",["296"],"no-unused-vars","'setNewTask' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'newTask'. Either include it or remove the dependency array.",["297"],"'RDT' is assigned a value but never used.","'logInfo' is assigned a value but never used.","'UDS' is defined but never used.","'setUdsList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'axios', 'user.accountID', and 'user.type'. Either include them or remove the dependency array.",["298"],"React Hook useEffect has a missing dependency: 'user.type'. Either include it or remove the dependency array.",["299"],["300"],"'Joined' is assigned a value but never used.","'New' is assigned a value but never used.","'Waiting' is assigned a value but never used.","'LoadTasks' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history' and 'type'. Either include them or remove the dependency array.",["301"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useState' is defined but never used.","'Component' is defined but never used.","'text' is assigned a value but never used.","'useEffect' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},"Update the dependencies array to be: [reload, props, axios, url]",{"range":"316","text":"317"},"Update the dependencies array to be: [axios, url]",{"range":"318","text":"319"},"Update the dependencies array to be: [newTask]",{"range":"320","text":"321"},"Update the dependencies array to be: [axios, user.accountID, user.type]",{"range":"322","text":"323"},"Update the dependencies array to be: [mainData, content, user.type]",{"range":"324","text":"325"},"Update the dependencies array to be: [axios]",{"range":"326","text":"327"},"Update the dependencies array to be: [data, history, type]",{"range":"328","text":"329"},[1104,1119],"[reload, props, axios, url]",[2425,2430],"[axios, url]",[866,868],"[newTask]",[1806,1808],"[axios, user.accountID, user.type]",[2333,2352],"[mainData, content, user.type]",[818,820],"[axios]",[1411,1417],"[data, history, type]"]